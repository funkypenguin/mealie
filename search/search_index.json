{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"roadmap/","text":"Development Road Map Feature Requests See the Github META issue for tracking feature requests Progress See the Github Projects to see what is currently being worked on","title":"Development Road Map"},{"location":"roadmap/#development-road-map","text":"","title":"Development Road Map"},{"location":"roadmap/#feature-requests","text":"See the Github META issue for tracking feature requests","title":"Feature Requests"},{"location":"roadmap/#progress","text":"See the Github Projects to see what is currently being worked on","title":"Progress"},{"location":"api/redoc/","text":"","title":"API Reference"},{"location":"changelog/v0.1.0/","text":"v0.1.0 - Initial Beta Bug Fixes Fixed Can't delete recipe after changing name - Closes Closes #67 Fixed No image when added by URL, and can't add an image - Closes Closes #66 Fixed Images saved with no way to delete when add recipe via URL fails - Closes Closes #43 Features Additional Language Support Improved deployment documentation Additional database! SQlite is now supported! - Closes #48 All site data is now backed up. Support for Prep Time, Total Time, and Cook Time field - Closes #63 New backup import process with support for themes and site settings BETA ARM support! - Closes #69 Code / Developer Improvements Unified Database Access Layers Poetry / pyproject.toml support over requirements.txt Local development without database is now possible! Local mkdocs server added to docker-compose.dev.yml Major code refactoring to support new database layer Global variable refactor Breaking Changes Internal docker port is now 80 instead of 9000. You MUST remap the internal port to connect to the UI. Breaking Changes As I've adopted the SQL database model I find that using 2 different types of databases will inevitably hinder development. As such after release v0.1.0 support for mongoDB will no longer be available. Prior to upgrading to v0.2.0 you will need to export your site and import after updating. This should be a painless process and require minimal intervention on the users part. Moving forward we will do our best to minimize changes that require user intervention like this and make updates a smooth process. v0.0.2 - Pre-release Second Patch A quality update with major props to zackbcom for working hard on making the theming just that much better! Bug Fixes Fixed empty backup failure without markdown template Fixed opacity issues with marked steps - mtoohey31 Fixed hot-reloading development environment - grssmnn Fixed recipe not saving without image - Closes #7 + Closes #54 Fixed parsing error on image property null - Closes #43 General Improvements Added Confirmation component to deleting recipes - zackbcom Updated Theme backend - zackbcom Added Persistent storage to vuex - zackbcom General Color/Theme Improvements More consistent UI More minimalist coloring Added API key extras to Recipe Data - See Documentation Users can now add custom json key/value pairs to all recipes via the editor for access in 3rd part applications. For example users can add a \"message\" field in the extras that can be accessed on API calls to play a message over google home. Improved image rendering (nearly x2 speed) Improved documentation + API Documentation Improved recipe parsing - Closes #51 User feedback on backup importing v0.0.1 - Pre-release Patch General Updated Favicon Renamed Frontend Window Added Debug folder to dump scraper data prior to processing. Recipes Added user feedback on bad URL Better backend data validation for updating recipes, avoid small syntax errors corrupting database entry. Closes #8 Fixed spacing Closes while editing new recipes in JSON v0.0.0 - Initial Pre-release The initial pre-release. It should be semi-functional but does not include a lot of user feedback You may notice errors that have no user feedback and have no idea what went wrong. Recipes Automatic web scrapping for common recipe platforms Interactive API Documentation thanks to FastAPI and Swagger UI Recipe Editor JSON Recipe Editor in browser Custom tags and categories Rate recipes Add notes to recipes Migration From Other Platforms Chowdown Meal Planner Random Meal plan generation based off categories Expose notes in the API to allow external applications to access relevant information for meal plans Database Import / Export Easily Import / Export your recipes from the UI Export recipes in markdown format for universal access Use the default or a custom jinja2 template","title":"v0.1.0 Beta"},{"location":"changelog/v0.1.0/#v010-initial-beta","text":"","title":"v0.1.0 - Initial Beta"},{"location":"changelog/v0.1.0/#bug-fixes","text":"Fixed Can't delete recipe after changing name - Closes Closes #67 Fixed No image when added by URL, and can't add an image - Closes Closes #66 Fixed Images saved with no way to delete when add recipe via URL fails - Closes Closes #43","title":"Bug Fixes"},{"location":"changelog/v0.1.0/#features","text":"Additional Language Support Improved deployment documentation Additional database! SQlite is now supported! - Closes #48 All site data is now backed up. Support for Prep Time, Total Time, and Cook Time field - Closes #63 New backup import process with support for themes and site settings BETA ARM support! - Closes #69","title":"Features"},{"location":"changelog/v0.1.0/#code-developer-improvements","text":"Unified Database Access Layers Poetry / pyproject.toml support over requirements.txt Local development without database is now possible! Local mkdocs server added to docker-compose.dev.yml Major code refactoring to support new database layer Global variable refactor","title":"Code / Developer Improvements"},{"location":"changelog/v0.1.0/#breaking-changes","text":"Internal docker port is now 80 instead of 9000. You MUST remap the internal port to connect to the UI. Breaking Changes As I've adopted the SQL database model I find that using 2 different types of databases will inevitably hinder development. As such after release v0.1.0 support for mongoDB will no longer be available. Prior to upgrading to v0.2.0 you will need to export your site and import after updating. This should be a painless process and require minimal intervention on the users part. Moving forward we will do our best to minimize changes that require user intervention like this and make updates a smooth process.","title":"Breaking Changes"},{"location":"changelog/v0.1.0/#v002-pre-release-second-patch","text":"A quality update with major props to zackbcom for working hard on making the theming just that much better!","title":"v0.0.2 - Pre-release Second Patch"},{"location":"changelog/v0.1.0/#bug-fixes_1","text":"Fixed empty backup failure without markdown template Fixed opacity issues with marked steps - mtoohey31 Fixed hot-reloading development environment - grssmnn Fixed recipe not saving without image - Closes #7 + Closes #54 Fixed parsing error on image property null - Closes #43","title":"Bug Fixes"},{"location":"changelog/v0.1.0/#general-improvements","text":"Added Confirmation component to deleting recipes - zackbcom Updated Theme backend - zackbcom Added Persistent storage to vuex - zackbcom General Color/Theme Improvements More consistent UI More minimalist coloring Added API key extras to Recipe Data - See Documentation Users can now add custom json key/value pairs to all recipes via the editor for access in 3rd part applications. For example users can add a \"message\" field in the extras that can be accessed on API calls to play a message over google home. Improved image rendering (nearly x2 speed) Improved documentation + API Documentation Improved recipe parsing - Closes #51 User feedback on backup importing","title":"General Improvements"},{"location":"changelog/v0.1.0/#v001-pre-release-patch","text":"","title":"v0.0.1 - Pre-release Patch"},{"location":"changelog/v0.1.0/#general","text":"Updated Favicon Renamed Frontend Window Added Debug folder to dump scraper data prior to processing.","title":"General"},{"location":"changelog/v0.1.0/#recipes","text":"Added user feedback on bad URL Better backend data validation for updating recipes, avoid small syntax errors corrupting database entry. Closes #8 Fixed spacing Closes while editing new recipes in JSON","title":"Recipes"},{"location":"changelog/v0.1.0/#v000-initial-pre-release","text":"The initial pre-release. It should be semi-functional but does not include a lot of user feedback You may notice errors that have no user feedback and have no idea what went wrong.","title":"v0.0.0 - Initial Pre-release"},{"location":"changelog/v0.1.0/#recipes_1","text":"Automatic web scrapping for common recipe platforms Interactive API Documentation thanks to FastAPI and Swagger UI Recipe Editor JSON Recipe Editor in browser Custom tags and categories Rate recipes Add notes to recipes Migration From Other Platforms Chowdown","title":"Recipes"},{"location":"changelog/v0.1.0/#meal-planner","text":"Random Meal plan generation based off categories Expose notes in the API to allow external applications to access relevant information for meal plans","title":"Meal Planner"},{"location":"changelog/v0.1.0/#database-import-export","text":"Easily Import / Export your recipes from the UI Export recipes in markdown format for universal access Use the default or a custom jinja2 template","title":"Database Import / Export"},{"location":"changelog/v0.2.0/","text":"v0.2.1 - Hot Fixes! Features and Improvements Fixes upload image error when no photo was scrapped Fixes no last_recipe.json not updating Added markdown rendering for notes New notifications Minor UI improvements Recipe editor refactor Settings/Theme models refactor Development / Misc Added async file response for images, downloading files. Breakup recipe view component v0.2.0 - Now with Test! This is, what I think, is a big release! Tons of new features and some great quality of life improvements with some additional features. You may find that I made promises to include some fixes/features in v0.2.0. The short of is I greatly underestimated the work needed to refactor the database to a usable state and integrate categories in a way that is useful for users. This shouldn't be taken as a sign that I'm dropping those feature requests or ignoring them. I felt it was better to push a release in the current state rather than drag on development to try and fulfil all of the promises I made. Upgrade Process Database Breaks! I have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically. Bug Fixes Remove ability to save recipe with no name Fixed data validation error on missing parameters Fixed failed database initialization at startup - Closes #98 Fixed misaligned text on various cards Fixed bug that blocked opening links in new tabs - Closes #122 Fixed router link bugs - Closes #122 Fixed navigation on keyboard selection - Closes #139 Features and Improvements \ud83d\udc33 Dockerfile now 1/5 of the size! \ud83c\udf0e UI Language Selection + Additional Supported Language Home Page By default your homepage will display only the recently added recipes. You can configured sections to show on the home-screen based of categories on the settings page. A new sidebar is now shown on the main page that lists all the categories in the database. Clicking on them navigates into a page that shows only recipes. Basic Sort functionality has been added. More options are on the way! Meal Planner Improved Search (Fuzzy Search) New Scheduled card support Recipe Editor Ingredients are now sortable via drag-and-drop Known categories now show up in the dropdown - Closes 83 Initial code for data validation to prevent errors Migrations Card based redesign Upload from the UI Unified Chowdown / Nextcloud import process. (Removed Git as a dependency) API Category and Tag endpoints added Major Endpoint refactor Improved API documentation Link to your Local API is now on your /settings/site . You can use it to explore your API. Style Continued work on button/style unification Adding icons to buttons New Color Theme Picker UI Development Fixed Vetur config file. Autocomplete in VSCode works! File/Folder restructuring Added Prettier config Fixed incorrect layout code FastAPI Route tests for major operations - WIP (shallow testing) Breaking Changes Breaking Changes API endpoints have been refactored to adhear to a more consistent standard. This is a WIP and more changes are likely to occur. Officially Dropped MongoDB Support Database Breaks! We have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically.","title":"v0.2.0 Now With Tests!"},{"location":"changelog/v0.2.0/#v021-hot-fixes","text":"","title":"v0.2.1 - Hot Fixes!"},{"location":"changelog/v0.2.0/#features-and-improvements","text":"Fixes upload image error when no photo was scrapped Fixes no last_recipe.json not updating Added markdown rendering for notes New notifications Minor UI improvements Recipe editor refactor Settings/Theme models refactor","title":"Features and Improvements"},{"location":"changelog/v0.2.0/#development-misc","text":"Added async file response for images, downloading files. Breakup recipe view component","title":"Development / Misc"},{"location":"changelog/v0.2.0/#v020-now-with-test","text":"This is, what I think, is a big release! Tons of new features and some great quality of life improvements with some additional features. You may find that I made promises to include some fixes/features in v0.2.0. The short of is I greatly underestimated the work needed to refactor the database to a usable state and integrate categories in a way that is useful for users. This shouldn't be taken as a sign that I'm dropping those feature requests or ignoring them. I felt it was better to push a release in the current state rather than drag on development to try and fulfil all of the promises I made. Upgrade Process Database Breaks! I have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically.","title":"v0.2.0 - Now with Test!"},{"location":"changelog/v0.2.0/#bug-fixes","text":"Remove ability to save recipe with no name Fixed data validation error on missing parameters Fixed failed database initialization at startup - Closes #98 Fixed misaligned text on various cards Fixed bug that blocked opening links in new tabs - Closes #122 Fixed router link bugs - Closes #122 Fixed navigation on keyboard selection - Closes #139","title":"Bug Fixes"},{"location":"changelog/v0.2.0/#features-and-improvements_1","text":"\ud83d\udc33 Dockerfile now 1/5 of the size! \ud83c\udf0e UI Language Selection + Additional Supported Language Home Page By default your homepage will display only the recently added recipes. You can configured sections to show on the home-screen based of categories on the settings page. A new sidebar is now shown on the main page that lists all the categories in the database. Clicking on them navigates into a page that shows only recipes. Basic Sort functionality has been added. More options are on the way! Meal Planner Improved Search (Fuzzy Search) New Scheduled card support Recipe Editor Ingredients are now sortable via drag-and-drop Known categories now show up in the dropdown - Closes 83 Initial code for data validation to prevent errors Migrations Card based redesign Upload from the UI Unified Chowdown / Nextcloud import process. (Removed Git as a dependency) API Category and Tag endpoints added Major Endpoint refactor Improved API documentation Link to your Local API is now on your /settings/site . You can use it to explore your API. Style Continued work on button/style unification Adding icons to buttons New Color Theme Picker UI","title":"Features and Improvements"},{"location":"changelog/v0.2.0/#development","text":"Fixed Vetur config file. Autocomplete in VSCode works! File/Folder restructuring Added Prettier config Fixed incorrect layout code FastAPI Route tests for major operations - WIP (shallow testing)","title":"Development"},{"location":"changelog/v0.2.0/#breaking-changes","text":"Breaking Changes API endpoints have been refactored to adhear to a more consistent standard. This is a WIP and more changes are likely to occur. Officially Dropped MongoDB Support Database Breaks! We have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically.","title":"Breaking Changes"},{"location":"changelog/v0.3.0/","text":"v0.3.0 Bug Fixes Fixed open search on / when in input. - Closes #174 Error when importing recipe: KeyError: '@type' - Closes #145 Fixed Import Issue - bhg.com - Closes #138 Scraper not working with recipe containing HowToSection - Closes #73 Features and Improvements Improved Nextcloud Imports Improved Recipe Parser! Open search with / hotkey! Database and App version are now split Unified and improved snackbar notifications New Category/Tag endpoints to filter all recipes by Category or Tag Category sidebar now has show/hide behavior on mobile Settings menu on mobile is improved Meal Planner You can now restrict recipe categories used for random meal-plan creation in the settings menu Recipe picker dialog will now display recipes when the search bar is empty Minor UI improvements Shopping lists! Shopping list can now be generated from a meal plan. Currently ingredients are split by recipes or there is a beta feature that attempts to sort them by similarity. Recipe Viewer Categories, Tags, and Notes will now be displayed below the steps on smaller screens Recipe Editor Text areas now auto grow to fit content Description, Steps, and Notes support Markdown! This includes inline html in Markdown. Imports A revamped dialog has been created to provide more information on restoring backups. Exceptions on the backend are now sent to the frontend and are easily viewable to see what went wrong when you restored a backup. This functionality will be ported over to the migrations in a future release.","title":"v0.3.0 Improvements"},{"location":"changelog/v0.3.0/#v030","text":"","title":"v0.3.0"},{"location":"changelog/v0.3.0/#bug-fixes","text":"Fixed open search on / when in input. - Closes #174 Error when importing recipe: KeyError: '@type' - Closes #145 Fixed Import Issue - bhg.com - Closes #138 Scraper not working with recipe containing HowToSection - Closes #73","title":"Bug Fixes"},{"location":"changelog/v0.3.0/#features-and-improvements","text":"Improved Nextcloud Imports Improved Recipe Parser! Open search with / hotkey! Database and App version are now split Unified and improved snackbar notifications New Category/Tag endpoints to filter all recipes by Category or Tag Category sidebar now has show/hide behavior on mobile Settings menu on mobile is improved Meal Planner You can now restrict recipe categories used for random meal-plan creation in the settings menu Recipe picker dialog will now display recipes when the search bar is empty Minor UI improvements Shopping lists! Shopping list can now be generated from a meal plan. Currently ingredients are split by recipes or there is a beta feature that attempts to sort them by similarity. Recipe Viewer Categories, Tags, and Notes will now be displayed below the steps on smaller screens Recipe Editor Text areas now auto grow to fit content Description, Steps, and Notes support Markdown! This includes inline html in Markdown. Imports A revamped dialog has been created to provide more information on restoring backups. Exceptions on the backend are now sent to the frontend and are easily viewable to see what went wrong when you restored a backup. This functionality will be ported over to the migrations in a future release.","title":"Features and Improvements"},{"location":"changelog/v0.4.0/","text":"v0.4.0 Whoa, What a Release! App Version: v0.4.0 Database Version: v0.4.0 Breaking Changes Breaking Changes Database A new database will be created. You must export your data and then import it after upgrading. Site Settings With the addition of group settings and a re-write of the database layer of the application backend, there is no migration path for your current site settings. Webhooks Settings, Meal Plan Categories are now managed by groups. Site settings, mainly homepage settings, are now site specific and managed by administrators. When upgrading be sure to uncheck the settings when importing your old data. ENV Variables Names have been changed to be more consistent with industry standards. See the Installation Page for new parameters. Bug Fixes Fixed Search Results Limited to 100 - #198 Fixed recipes from marmiton.org not fully scrapped - #196 Fixed Unable to get a page to load - #194 Fixed Recipe's from Epicurious don't upload. - #193 Fixed Edited blank recipe in meal plan is not saved - #184 Fixed Create a new meal plan allows selection of an end date that is prior to the start date - #183 Fixed Original URL not saved to imported recipe in 0.3.0-dev - #183 Fixed \"IndexError: list index out of range\" when viewing shopping list for meal plan containing days without a recipe selected - #178 Features and Improvements General Documentation Rewrite New Demo Site! New Documentation Landing Page Custom Caddy Configuration User Management Introduction Updated Documentation Everything! The API Reference is now better embedded inside of the docs New default external port in documentation (Port 9000 -> 9925). This is only the port exposed by the host to the docker image. It doesn't change any existing functionality. User Authentication Authentication! Tons of stuff went into creating a flexible authentication platform for a lot of different use cases. Review the documentation for more information on how to use the authentication, and how everything works together. More complex management of recipes and user restrictions are in the works, but this is a great start! Some key features include Sign Up Links Admin and User Roles Password Change Group Management Create/Edit/Delete Restrictions Custom Pages You can now create custom pages that are displayed on the homepage sidebar to organize categories of recipes into pages. For example, if you have several categories that encompass \"Entr\u00e9e\" you can group all those categories together under the \"Entr\u00e9e\" page. See Building Pages for more information. Tip Note that this replaces the behavior of automatically adding categories to the sidebar. UI Improvements Completed Redesign of the Admin Panel Profile Pages Side Panel Menu Improved UI for Recipe Search Language selector is now displayed on all pages and does not require an account Recipe Data Recipe Database Refactoring. Tons of new information is now stored for recipes in the database. Not all is accessible via the UI, but it's coming. Nutrition Information calories fatContent fiberContent proteinContent sodiumContent sugarContent recipeCuisine has been added \"categories\" has been migrated to \"recipeCategory\" to adhere closer to the standard schema \"tool\" - a list of tools used for the recipe Behind the Scenes Removed CDN dependencies Database Model Refactoring Import/Export refactoring File/Folder Name Refactoring Development is now easier with a makefile Mealie is now a proper package using poetry Test refactoring Test Coverage 83% up from 75%!","title":"v0.4.0 Authentication"},{"location":"changelog/v0.4.0/#v040-whoa-what-a-release","text":"App Version: v0.4.0 Database Version: v0.4.0","title":"v0.4.0 Whoa, What a Release!"},{"location":"changelog/v0.4.0/#breaking-changes","text":"Breaking Changes","title":"Breaking Changes"},{"location":"changelog/v0.4.0/#database","text":"A new database will be created. You must export your data and then import it after upgrading.","title":"Database"},{"location":"changelog/v0.4.0/#site-settings","text":"With the addition of group settings and a re-write of the database layer of the application backend, there is no migration path for your current site settings. Webhooks Settings, Meal Plan Categories are now managed by groups. Site settings, mainly homepage settings, are now site specific and managed by administrators. When upgrading be sure to uncheck the settings when importing your old data.","title":"Site Settings"},{"location":"changelog/v0.4.0/#env-variables","text":"Names have been changed to be more consistent with industry standards. See the Installation Page for new parameters.","title":"ENV Variables"},{"location":"changelog/v0.4.0/#bug-fixes","text":"Fixed Search Results Limited to 100 - #198 Fixed recipes from marmiton.org not fully scrapped - #196 Fixed Unable to get a page to load - #194 Fixed Recipe's from Epicurious don't upload. - #193 Fixed Edited blank recipe in meal plan is not saved - #184 Fixed Create a new meal plan allows selection of an end date that is prior to the start date - #183 Fixed Original URL not saved to imported recipe in 0.3.0-dev - #183 Fixed \"IndexError: list index out of range\" when viewing shopping list for meal plan containing days without a recipe selected - #178","title":"Bug Fixes"},{"location":"changelog/v0.4.0/#features-and-improvements","text":"","title":"Features and Improvements"},{"location":"changelog/v0.4.0/#general","text":"Documentation Rewrite New Demo Site! New Documentation Landing Page Custom Caddy Configuration User Management Introduction Updated Documentation Everything! The API Reference is now better embedded inside of the docs New default external port in documentation (Port 9000 -> 9925). This is only the port exposed by the host to the docker image. It doesn't change any existing functionality.","title":"General"},{"location":"changelog/v0.4.0/#user-authentication","text":"Authentication! Tons of stuff went into creating a flexible authentication platform for a lot of different use cases. Review the documentation for more information on how to use the authentication, and how everything works together. More complex management of recipes and user restrictions are in the works, but this is a great start! Some key features include Sign Up Links Admin and User Roles Password Change Group Management Create/Edit/Delete Restrictions","title":"User Authentication"},{"location":"changelog/v0.4.0/#custom-pages","text":"You can now create custom pages that are displayed on the homepage sidebar to organize categories of recipes into pages. For example, if you have several categories that encompass \"Entr\u00e9e\" you can group all those categories together under the \"Entr\u00e9e\" page. See Building Pages for more information. Tip Note that this replaces the behavior of automatically adding categories to the sidebar.","title":"Custom Pages"},{"location":"changelog/v0.4.0/#ui-improvements","text":"Completed Redesign of the Admin Panel Profile Pages Side Panel Menu Improved UI for Recipe Search Language selector is now displayed on all pages and does not require an account","title":"UI Improvements"},{"location":"changelog/v0.4.0/#recipe-data","text":"Recipe Database Refactoring. Tons of new information is now stored for recipes in the database. Not all is accessible via the UI, but it's coming. Nutrition Information calories fatContent fiberContent proteinContent sodiumContent sugarContent recipeCuisine has been added \"categories\" has been migrated to \"recipeCategory\" to adhere closer to the standard schema \"tool\" - a list of tools used for the recipe","title":"Recipe Data"},{"location":"changelog/v0.4.0/#behind-the-scenes","text":"Removed CDN dependencies Database Model Refactoring Import/Export refactoring File/Folder Name Refactoring Development is now easier with a makefile Mealie is now a proper package using poetry Test refactoring Test Coverage 83% up from 75%!","title":"Behind the Scenes"},{"location":"changelog/v0.4.1/","text":"v0.4.1 App Version: v0.4.1 Database Version: v0.4.0 Breaking Changes Recipe Images While it shouldn't be a breaking change, I feel it is important to note that you may experience issues with the new image migration. Recipe images are now minified, this is done on start-up, import, migration, and when a new recipe is created. The initial boot or load may be a bit slow if you have lots of recipes but you likely won't notice. What you may notice is that if your recipe slug and the image name do not match, you will encounter issues with your images showing up. This can be resolved by finding the image directory and rename it to the appropriate slug. I did fix multiple edge cases, but it is likely more exists. As always make a backup before you update! On the plus side, this comes with a huge performance increase! \ud83c\udf89 Add markdown support for ingredients - Resolves #32 Ingredients editor improvements Fix Tags/Categories render problems on recipes Tags redirect to new tag pages Categories redirect to category pages Fix Backup download blocked by authentication Random meal-planner will no longer duplicate recipes unless no other options New Quick Week button to generate next 5 day week of recipe slots. Minor UI tweaks Recipe Cards now display 2 recipe tags Recipe images are now minified. This comes with a serious performance improvement. On initial startup you may experience some delays. Images are migrated to the new structure on startup, depending on the size of your database this can take some time. Note that original images are still kept for large displays like on the individual recipe pages. A smaller image is used for recipe cards A 'tiny' image is used for search images. Advanced Search Page. You can now use the search page to filter recipes to include/exclude tags and categories as well as select And/Or matching criteria. Added link to advanced search on quick search Better support for NextCloud imports Translate keywords to tags Fix rollback on failure Recipe Tag/Category Input components have been unified and now share a single way to interact. To add a new category in the recipe editor you need to click to '+' icon next to the input and fill out the form. This is the same for adding a Tag.","title":"v0.4.1 Frontend/UI"},{"location":"changelog/v0.4.1/#v041","text":"App Version: v0.4.1 Database Version: v0.4.0 Breaking Changes","title":"v0.4.1"},{"location":"changelog/v0.4.1/#recipe-images","text":"While it shouldn't be a breaking change, I feel it is important to note that you may experience issues with the new image migration. Recipe images are now minified, this is done on start-up, import, migration, and when a new recipe is created. The initial boot or load may be a bit slow if you have lots of recipes but you likely won't notice. What you may notice is that if your recipe slug and the image name do not match, you will encounter issues with your images showing up. This can be resolved by finding the image directory and rename it to the appropriate slug. I did fix multiple edge cases, but it is likely more exists. As always make a backup before you update! On the plus side, this comes with a huge performance increase! \ud83c\udf89 Add markdown support for ingredients - Resolves #32 Ingredients editor improvements Fix Tags/Categories render problems on recipes Tags redirect to new tag pages Categories redirect to category pages Fix Backup download blocked by authentication Random meal-planner will no longer duplicate recipes unless no other options New Quick Week button to generate next 5 day week of recipe slots. Minor UI tweaks Recipe Cards now display 2 recipe tags Recipe images are now minified. This comes with a serious performance improvement. On initial startup you may experience some delays. Images are migrated to the new structure on startup, depending on the size of your database this can take some time. Note that original images are still kept for large displays like on the individual recipe pages. A smaller image is used for recipe cards A 'tiny' image is used for search images. Advanced Search Page. You can now use the search page to filter recipes to include/exclude tags and categories as well as select And/Or matching criteria. Added link to advanced search on quick search Better support for NextCloud imports Translate keywords to tags Fix rollback on failure Recipe Tag/Category Input components have been unified and now share a single way to interact. To add a new category in the recipe editor you need to click to '+' icon next to the input and fill out the form. This is the same for adding a Tag.","title":"Recipe Images"},{"location":"changelog/v0.4.2/","text":"v0.4.2 App Version: v0.4.2 Database Version: v0.4.0 Breaking Changes With a recent refactor some users been experiencing issues with an environmental variable not being set correct. If you are experiencing issues, please provide your comments Here . If you are a developer, you may experience issues with development as a new environmental variable has been introduced. Setting PRODUCTION=false will allow you to develop as normal. Bug Fixes Fixed Initialization script (v0.4.1a Hot Fix) - Closes #274 Fixed nested list error on recipe scrape - Closes #306 Fixed ingredient checkboxes - Closes #304 Removed link on recent - Closes #297 Categories sidebar is auto generated if no pages are created - Closes #291 Fix tag issues on creating custom pages - Closes #290 Validate paths on export - Closes #275 Walk Nextcloud import directory - Closes #254 General Improvements Improved Nextcloud Migration. Mealie will now walk the directories in a zip file looking for directories that match the pattern of a Nextcloud Recipe. Closes #254 Rewrite Keywords to Tag Fields Rewrite url to orgURL Improved Chowdown Migration Migration report is now similar to the Backup report Tags/Categories are now title cased on import \"dinner\" -> \"Dinner\" Depreciate ENV variable to PRODUCTION Set PRODUCTION env variable to default to true Unify Logger across the backend mealie.log and last_recipe.json are now downloadable from the frontend from the /admin/about New download schema where you request a token and then use that token to hit a single endpoint to download a file. This is a notable change if you are using the API to download backups. Recipe images can now be added directly from a URL - See #117 for details","title":"v0.4.2 Backend/Migrations"},{"location":"changelog/v0.4.2/#v042","text":"App Version: v0.4.2 Database Version: v0.4.0 Breaking Changes With a recent refactor some users been experiencing issues with an environmental variable not being set correct. If you are experiencing issues, please provide your comments Here . If you are a developer, you may experience issues with development as a new environmental variable has been introduced. Setting PRODUCTION=false will allow you to develop as normal.","title":"v0.4.2"},{"location":"changelog/v0.4.2/#bug-fixes","text":"Fixed Initialization script (v0.4.1a Hot Fix) - Closes #274 Fixed nested list error on recipe scrape - Closes #306 Fixed ingredient checkboxes - Closes #304 Removed link on recent - Closes #297 Categories sidebar is auto generated if no pages are created - Closes #291 Fix tag issues on creating custom pages - Closes #290 Validate paths on export - Closes #275 Walk Nextcloud import directory - Closes #254","title":"Bug Fixes"},{"location":"changelog/v0.4.2/#general-improvements","text":"Improved Nextcloud Migration. Mealie will now walk the directories in a zip file looking for directories that match the pattern of a Nextcloud Recipe. Closes #254 Rewrite Keywords to Tag Fields Rewrite url to orgURL Improved Chowdown Migration Migration report is now similar to the Backup report Tags/Categories are now title cased on import \"dinner\" -> \"Dinner\" Depreciate ENV variable to PRODUCTION Set PRODUCTION env variable to default to true Unify Logger across the backend mealie.log and last_recipe.json are now downloadable from the frontend from the /admin/about New download schema where you request a token and then use that token to hit a single endpoint to download a file. This is a notable change if you are using the API to download backups. Recipe images can now be added directly from a URL - See #117 for details","title":"General Improvements"},{"location":"changelog/v0.4.3/","text":"v0.4.3 App Version: v0.4.3 Database Version: v0.4.0 Bug Fixes Fix Upload error for Migrations Fixes #315 - Cannot select another language Fixes #314 - case-sensitive emails Fixes #312 - Profile Image Reload Improvements New TOKEN_TIME and DEFAULT_EMAIL env variables","title":"v0.4.3 Hot Fix"},{"location":"changelog/v0.4.3/#v043","text":"App Version: v0.4.3 Database Version: v0.4.0","title":"v0.4.3"},{"location":"changelog/v0.4.3/#bug-fixes","text":"Fix Upload error for Migrations Fixes #315 - Cannot select another language Fixes #314 - case-sensitive emails Fixes #312 - Profile Image Reload","title":"Bug Fixes"},{"location":"changelog/v0.4.3/#improvements","text":"New TOKEN_TIME and DEFAULT_EMAIL env variables","title":"Improvements"},{"location":"changelog/v0.5.0/","text":"v0.5.0 Too Many Changes! App Version: v0.5.0 Database Version: v0.5.0 Breaking Changes Breaking Changes Database Database version has been bumped from v0.4.x -> v0.5.0. You will need to export and import your data. Moving forward, we will be using database migrations (BETA) to do this automatically. Note that you still must backup your data. If you don't, it's entirely possible something may go wrong and you could lose your data on upgrade. Image Directory the /data/img directory has been depreciated. All images are now stored in the /recipes/{slug}/image directory. Images should be migrated automatically, but you may experience issues related to this change. API Usage If you have been using the API directly, many of the routes and status codes have changed. You may experience issues with directly consuming the API. Arm/v7 Support Mealie will no longer build in CI/CD due to a issue with the rust compiler on 32 bit devices. You can reference this issue on the matrix-org/synapse Github page that are facing a similar issue. You may still be able to build the docker image you-self. Potential Data Loss With this release comes a major rework of how files are stored on disk and where things belong. Migration of files should be done automatically. We have tested extensively with many different backups and user bases and have found that no one experienced data-loss. HOWEVER, with all the major changes that have occurred, it is vital that to prevent any data-loss you must create a backup and store that backup outside of your mealie instance. If you do not do this, you may lose your data. Bug Fixes Fixed #25 - Allow changing rating without going into edit Fixed #475 - trim whitespace on login Fixes #435 - Better Email Regex Fixed #428 - Meal Planner now works on iOS devices Fixed #419 - Typos Fixed #418 - You can now \"export\" shopping lists Fixed #356 - Shopping List items are now grouped Fixed #329 - Fixed profile image not loading Fixed #461 - Proper JSON serialization on webhooks Fixed #332 - Language settings are saved for one browser Fixes #281 - Slow Handling of Large Sets of Recipes Fixed #356 - Shopping lists generate duplicate items Fixed #271 - Slow handling of larger data sets Fixed #472, #469, #458, #456 - Improve Recipe Parser Features and Improvements Highlights Recipe Parser Recipes can now be imported with a bookmarklet! Significant improvement in supported sites with the new Recipe Scraper Library UI Debugging now available at /recipes/debugger Better error messages on failure \u26a0\ufe0f last_recipe.json is now depreciated Beta Support for Postgres! \ud83c\udf89 See the getting started page for details Recipe Features New button bar for editors with improved accessibility and performance Step Sections now supported Recipe Assets Add Asset image to recipe step Additional View Settings. Better print support New Toolbox Page! Bulk assign categories and tags by keyword search Title case all Categories or Tags with 1 click Create/Rename/Delete Operations for Tags/Categories Remove Unused Categories or Tags with 1 click Recipe Cards now have a menu button for quick actions! Edit Delete Integrated Share with supported OS/Browsers Print New Profile Dashboard! Edit Your Profile Create/Edit Themes View other users in your Group See what's for dinner Manage Long Live API Tokens (New) New Admin Dashboard! \ud83c\udf89 Now you can get some insight on your application with application statics and events. See uncategorized/untagged recipes and organize them! Backup/Restore right from your dashboard See server side events. Now you can know who deleted your favorite recipe! New Event Notifications through the Apprise Library Get notified when specific server side events occur Meal Planner Multiple Recipes per day Supports meals without recipes (Enter title and description) Generate share-link from created meal-planners Shopping lists can be directly generated from the meal plan General User can now favorite recipes New 'Dark' Color Theme Packaged with Mealie Updated Recipe Card Sections Toolbar New Sort Options (They work this time!) Alphabetical Rating Created Date Updated Date Shuffle (Random Sort) New 'Random' Recipe button on recipe sections. Random recipes are selected from the filtered results below. For example, on the \"Cakes\" category page, you will only get recipes in the \"Cakes\" category. Rating can be updated without entering the editor - Closes #25 Updated recipe editor styles and moved notes to below the steps. Redesigned search bar 'Dinner this week' shows a warning when no meal is planned yet 'Dinner today' shows a warning when no meal is planned yet More localization Start date for Week is now selectable Languages are now managed through Crowdin Application Bar was Rewritten Sidebar can now be toggled everywhere. New and improved mobile friendly bottom bar Improved styling for search bar in desktop Improved search layout on mobile Profile image now shown on all sidebars Switched from Flash Messages to Snackbar (Removed dependency) Performance Images are now served up by the Caddy increase performance and offloading some loads from the API server Requesting all recipes from the server has been rewritten to refresh less often and manage client side data better. All images are now converted to .webp for better compression Behind the Scenes The database layer has been added for future recipe scaling. Black and Flake8 now run as CI/CD checks New debian based docker image Unified Sidebar Components Refactor UI components to fit Vue best practices (WIP) The API returns more consistent status codes The API returns error code instead of error text when appropriate \u26a0\ufe0f May cause side-effects if you were directly consuming the API","title":"v0.5.0 General Upgrades"},{"location":"changelog/v0.5.0/#v050-too-many-changes","text":"App Version: v0.5.0 Database Version: v0.5.0","title":"v0.5.0 Too Many Changes!"},{"location":"changelog/v0.5.0/#breaking-changes","text":"Breaking Changes","title":"Breaking Changes"},{"location":"changelog/v0.5.0/#database","text":"Database version has been bumped from v0.4.x -> v0.5.0. You will need to export and import your data. Moving forward, we will be using database migrations (BETA) to do this automatically. Note that you still must backup your data. If you don't, it's entirely possible something may go wrong and you could lose your data on upgrade.","title":"Database"},{"location":"changelog/v0.5.0/#image-directory","text":"the /data/img directory has been depreciated. All images are now stored in the /recipes/{slug}/image directory. Images should be migrated automatically, but you may experience issues related to this change.","title":"Image Directory"},{"location":"changelog/v0.5.0/#api-usage","text":"If you have been using the API directly, many of the routes and status codes have changed. You may experience issues with directly consuming the API.","title":"API Usage"},{"location":"changelog/v0.5.0/#armv7-support","text":"Mealie will no longer build in CI/CD due to a issue with the rust compiler on 32 bit devices. You can reference this issue on the matrix-org/synapse Github page that are facing a similar issue. You may still be able to build the docker image you-self. Potential Data Loss With this release comes a major rework of how files are stored on disk and where things belong. Migration of files should be done automatically. We have tested extensively with many different backups and user bases and have found that no one experienced data-loss. HOWEVER, with all the major changes that have occurred, it is vital that to prevent any data-loss you must create a backup and store that backup outside of your mealie instance. If you do not do this, you may lose your data.","title":"Arm/v7 Support"},{"location":"changelog/v0.5.0/#bug-fixes","text":"Fixed #25 - Allow changing rating without going into edit Fixed #475 - trim whitespace on login Fixes #435 - Better Email Regex Fixed #428 - Meal Planner now works on iOS devices Fixed #419 - Typos Fixed #418 - You can now \"export\" shopping lists Fixed #356 - Shopping List items are now grouped Fixed #329 - Fixed profile image not loading Fixed #461 - Proper JSON serialization on webhooks Fixed #332 - Language settings are saved for one browser Fixes #281 - Slow Handling of Large Sets of Recipes Fixed #356 - Shopping lists generate duplicate items Fixed #271 - Slow handling of larger data sets Fixed #472, #469, #458, #456 - Improve Recipe Parser","title":"Bug Fixes"},{"location":"changelog/v0.5.0/#features-and-improvements","text":"","title":"Features and Improvements"},{"location":"changelog/v0.5.0/#highlights","text":"Recipe Parser Recipes can now be imported with a bookmarklet! Significant improvement in supported sites with the new Recipe Scraper Library UI Debugging now available at /recipes/debugger Better error messages on failure \u26a0\ufe0f last_recipe.json is now depreciated Beta Support for Postgres! \ud83c\udf89 See the getting started page for details Recipe Features New button bar for editors with improved accessibility and performance Step Sections now supported Recipe Assets Add Asset image to recipe step Additional View Settings. Better print support New Toolbox Page! Bulk assign categories and tags by keyword search Title case all Categories or Tags with 1 click Create/Rename/Delete Operations for Tags/Categories Remove Unused Categories or Tags with 1 click Recipe Cards now have a menu button for quick actions! Edit Delete Integrated Share with supported OS/Browsers Print New Profile Dashboard! Edit Your Profile Create/Edit Themes View other users in your Group See what's for dinner Manage Long Live API Tokens (New) New Admin Dashboard! \ud83c\udf89 Now you can get some insight on your application with application statics and events. See uncategorized/untagged recipes and organize them! Backup/Restore right from your dashboard See server side events. Now you can know who deleted your favorite recipe! New Event Notifications through the Apprise Library Get notified when specific server side events occur","title":"Highlights"},{"location":"changelog/v0.5.0/#meal-planner","text":"Multiple Recipes per day Supports meals without recipes (Enter title and description) Generate share-link from created meal-planners Shopping lists can be directly generated from the meal plan","title":"Meal Planner"},{"location":"changelog/v0.5.0/#general","text":"User can now favorite recipes New 'Dark' Color Theme Packaged with Mealie Updated Recipe Card Sections Toolbar New Sort Options (They work this time!) Alphabetical Rating Created Date Updated Date Shuffle (Random Sort) New 'Random' Recipe button on recipe sections. Random recipes are selected from the filtered results below. For example, on the \"Cakes\" category page, you will only get recipes in the \"Cakes\" category. Rating can be updated without entering the editor - Closes #25 Updated recipe editor styles and moved notes to below the steps. Redesigned search bar 'Dinner this week' shows a warning when no meal is planned yet 'Dinner today' shows a warning when no meal is planned yet More localization Start date for Week is now selectable Languages are now managed through Crowdin Application Bar was Rewritten Sidebar can now be toggled everywhere. New and improved mobile friendly bottom bar Improved styling for search bar in desktop Improved search layout on mobile Profile image now shown on all sidebars Switched from Flash Messages to Snackbar (Removed dependency)","title":"General"},{"location":"changelog/v0.5.0/#performance","text":"Images are now served up by the Caddy increase performance and offloading some loads from the API server Requesting all recipes from the server has been rewritten to refresh less often and manage client side data better. All images are now converted to .webp for better compression","title":"Performance"},{"location":"changelog/v0.5.0/#behind-the-scenes","text":"The database layer has been added for future recipe scaling. Black and Flake8 now run as CI/CD checks New debian based docker image Unified Sidebar Components Refactor UI components to fit Vue best practices (WIP) The API returns more consistent status codes The API returns error code instead of error text when appropriate \u26a0\ufe0f May cause side-effects if you were directly consuming the API","title":"Behind the Scenes"},{"location":"changelog/v0.5.1/","text":"v0.5.1 App Version: v0.5.1 Database Version: v0.5.0 Bug Fixes Fixed #538 - Missing Ingredients on Editor Fixed error on webhooks for new groups Fixed various icons references","title":"v0.5.1 Bug Fixes"},{"location":"changelog/v0.5.1/#v051","text":"App Version: v0.5.1 Database Version: v0.5.0","title":"v0.5.1"},{"location":"changelog/v0.5.1/#bug-fixes","text":"Fixed #538 - Missing Ingredients on Editor Fixed error on webhooks for new groups Fixed various icons references","title":"Bug Fixes"},{"location":"changelog/v0.5.2/","text":"v0.5.2 App Version: v0.5.2 Database Version: v0.5.0 Bug Fixes Fixed #617 - Section behavior when adding a step Fixed #615 - Recipe Settings are not available when creating new recipe Fixed #625 - API of today's image returns strange characters Fixed #590 - Duplicate Events when using Gunicorn Workers Features and Improvements General Recipe Instructions now collapse when checked Default recipe settings can be set through ENV variables Recipe Ingredient lists can now container ingredient sections. You can now download and upload individual recipes Localization Huge thanks to @sephrat for all his work on the project. He's very consistent in his contributions to the project and nearly every release has had some of his code in it! Here's some highlights from this release Lazy Load Translations (Huge Performance Increase!) Tons of localization additions all around the site. All of the work that goes into managing and making Crowdin a great feature the application Here a list of contributors on Crowding who make Mealie possible in different locals Name Languages Translated (Words) Target Words retmas-gh Polish 550 625 startos Italian 310 322 CMBoii Spanish 256 291 sephrat French 255 296 Daniel Tildeman (tildeman) Swedish 233 228 Rourke Dutch 216 214 Andreas Waschinski (Wascha) German 207 202 wengtad Chinese Simplified 176 343 Matthias Borremans (MrBorri) Dutch 96 89 Adam Syndoman (pypckompsite) Polish 68 65 JonasSchubert German 22 23 ThrawnJL Danish 7 7 NicholasBrody Dutch 7 7 Giel Janssens (gieljnssns) Dutch 4 4 kentora Danish 3 2 Docker Huge thanks to @wengtad for all his work on improving the deployment with docker. Optimize Docker Dev Size (Frontend: from ~1.52GB to ~429MB | API: from ~657MB to ~380MB) Optimize Docker Prod Size (from ~542MB to ~373MB) Add Gunicorn Add Gunicorn and Webworkers to Dockerfile #550 Add Docs for Gunicorn Add PUID/PGID to Docker. Fixes Initialization scripts fail to run when not executing as root user inside container #350, Not able to run correctly in docker if user permissions are specified #429 Merge Dockerfile.dev into Dockerfile (dev shared same base together with prod) Add Docs for PUID/PGID Add Docker healthcheck (for this is not necessary, I could remove if you want)","title":"v0.5.2 Misc Updates"},{"location":"changelog/v0.5.2/#v052","text":"App Version: v0.5.2 Database Version: v0.5.0","title":"v0.5.2"},{"location":"changelog/v0.5.2/#bug-fixes","text":"Fixed #617 - Section behavior when adding a step Fixed #615 - Recipe Settings are not available when creating new recipe Fixed #625 - API of today's image returns strange characters Fixed #590 - Duplicate Events when using Gunicorn Workers","title":"Bug Fixes"},{"location":"changelog/v0.5.2/#features-and-improvements","text":"","title":"Features and Improvements"},{"location":"changelog/v0.5.2/#general","text":"Recipe Instructions now collapse when checked Default recipe settings can be set through ENV variables Recipe Ingredient lists can now container ingredient sections. You can now download and upload individual recipes","title":"General"},{"location":"changelog/v0.5.2/#localization","text":"Huge thanks to @sephrat for all his work on the project. He's very consistent in his contributions to the project and nearly every release has had some of his code in it! Here's some highlights from this release Lazy Load Translations (Huge Performance Increase!) Tons of localization additions all around the site. All of the work that goes into managing and making Crowdin a great feature the application","title":"Localization"},{"location":"changelog/v0.5.2/#here-a-list-of-contributors-on-crowding-who-make-mealie-possible-in-different-locals","text":"Name Languages Translated (Words) Target Words retmas-gh Polish 550 625 startos Italian 310 322 CMBoii Spanish 256 291 sephrat French 255 296 Daniel Tildeman (tildeman) Swedish 233 228 Rourke Dutch 216 214 Andreas Waschinski (Wascha) German 207 202 wengtad Chinese Simplified 176 343 Matthias Borremans (MrBorri) Dutch 96 89 Adam Syndoman (pypckompsite) Polish 68 65 JonasSchubert German 22 23 ThrawnJL Danish 7 7 NicholasBrody Dutch 7 7 Giel Janssens (gieljnssns) Dutch 4 4 kentora Danish 3 2","title":"Here a list of contributors on Crowding who make Mealie possible in different locals"},{"location":"changelog/v0.5.2/#docker","text":"","title":"Docker"},{"location":"changelog/v0.5.2/#huge-thanks-to-wengtad-for-all-his-work-on-improving-the-deployment-with-docker","text":"Optimize Docker Dev Size (Frontend: from ~1.52GB to ~429MB | API: from ~657MB to ~380MB) Optimize Docker Prod Size (from ~542MB to ~373MB) Add Gunicorn Add Gunicorn and Webworkers to Dockerfile #550 Add Docs for Gunicorn Add PUID/PGID to Docker. Fixes Initialization scripts fail to run when not executing as root user inside container #350, Not able to run correctly in docker if user permissions are specified #429 Merge Dockerfile.dev into Dockerfile (dev shared same base together with prod) Add Docs for PUID/PGID Add Docker healthcheck (for this is not necessary, I could remove if you want)","title":"Huge thanks to @wengtad for all his work on improving the deployment with docker."},{"location":"contributors/non-coders/","text":"Non-Code Contributions We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing new features Becoming a maintainer Help translate to a new language or improve current translations Remember to join the Discord and stay in touch with other developers working on the project ! Additionally, you can buy me a coffee and support the project. When I get financial support it helps me know that there's real interest in the project and that it's worth the time to keep developing.","title":"Non-Code"},{"location":"contributors/non-coders/#non-code-contributions","text":"We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing new features Becoming a maintainer Help translate to a new language or improve current translations Remember to join the Discord and stay in touch with other developers working on the project ! Additionally, you can buy me a coffee and support the project. When I get financial support it helps me know that there's real interest in the project and that it's worth the time to keep developing.","title":"Non-Code Contributions"},{"location":"contributors/translating/","text":"Contributing with Translations Translations can be a great way for non-coders to contribute to project. We use Crowdin to allow several contributors to work on translating Mealie. You can simply help by voting for your preferred translations, or even by completely translating Mealie into a new language. Translations are regularly pulled from Crowdin and included in each new release. Please use Crowdin as much as possible if you have any question/issue regarding a particular string. You can take a look at Crowdin Knowledge base if you want to know more about how to use this tool. My language is missing in Mealie Once your language is translated on Crowdin, we need to manually add it in Mealie. If you believe your language is ready for use, please create an issue on GitHub. I can't find a particular text in Crowdin There can be several reasons: - The text you're looking for is outdated: someone has already changed it or it will be removed/changed in the next release. - It is possible some texts are not translatable (yet) for technical reasons. If you spot one, please reach out to us on Discord or raise an issue on GitHub. Technical information We use vue-i18n package for internationalization. Translations are stored in json format located in frontend/src/locales/messages . i18n Ally for VScode is helpful for generating new strings to translate. It also has a nice feature, which shows translations in-place when editing code.","title":"Translating"},{"location":"contributors/translating/#contributing-with-translations","text":"Translations can be a great way for non-coders to contribute to project. We use Crowdin to allow several contributors to work on translating Mealie. You can simply help by voting for your preferred translations, or even by completely translating Mealie into a new language. Translations are regularly pulled from Crowdin and included in each new release. Please use Crowdin as much as possible if you have any question/issue regarding a particular string. You can take a look at Crowdin Knowledge base if you want to know more about how to use this tool.","title":"Contributing with Translations"},{"location":"contributors/translating/#my-language-is-missing-in-mealie","text":"Once your language is translated on Crowdin, we need to manually add it in Mealie. If you believe your language is ready for use, please create an issue on GitHub.","title":"My language is missing in Mealie"},{"location":"contributors/translating/#i-cant-find-a-particular-text-in-crowdin","text":"There can be several reasons: - The text you're looking for is outdated: someone has already changed it or it will be removed/changed in the next release. - It is possible some texts are not translatable (yet) for technical reasons. If you spot one, please reach out to us on Discord or raise an issue on GitHub.","title":"I can't find a particular text in Crowdin"},{"location":"contributors/translating/#technical-information","text":"We use vue-i18n package for internationalization. Translations are stored in json format located in frontend/src/locales/messages . i18n Ally for VScode is helpful for generating new strings to translate. It also has a nice feature, which shows translations in-place when editing code.","title":"Technical information"},{"location":"contributors/developers-guide/code-contributions/","text":"Contributing to Mealie Please Join the Discord . We are building a community of developers working on the project. We Develop with Github We use github to host code, to track issues and feature requests, as well as accept pull requests. We Use Github Flow , So All Code Changes Happen Through Pull Requests Pull requests are the best way to propose changes to the codebase (we use Github Flow ). We actively welcome your pull requests: Fork the repo and create your branch from dev . Checkout the Discord, the PRs page, or the Projects page to get an idea of what's already being worked on. If you're interested on working on major changes please get in touch on discord and coordinate with other developers. No sense in doubling up on work if someones already on it. Once you've got an idea of what changes you want to make, create a draft PR as soon as you can to let us know what you're working on and how we can help! If you've changed APIs, update the documentation. Issue that pull request! If you make changes to the dev branch reflect those changes in the active changelog to keep track of changes. Don't forget to add your name/handle/identifier! Any contributions you make will be under the MIT Software License In short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that's a concern. Report bugs using Github's issues We use GitHub issues to track public bugs. Report a bug by opening a new issue ; it's that easy! Write bug reports with detail, background, and sample code Great Bug Reports tend to have: A quick summary and/or background Steps to reproduce Be specific! Give sample code if you can. This stackoverflow question includes sample code that anyone with a base R setup can run to reproduce what I was seeing What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or stuff you tried that didn't work) People love thorough bug reports. I'm not even kidding. License By contributing, you agree that your contributions will be licensed under its MIT License. References This document was adapted from the open-source contribution guidelines for Facebook's Draft","title":"Code Contributions"},{"location":"contributors/developers-guide/code-contributions/#contributing-to-mealie","text":"Please Join the Discord . We are building a community of developers working on the project.","title":"Contributing to Mealie"},{"location":"contributors/developers-guide/code-contributions/#we-develop-with-github","text":"We use github to host code, to track issues and feature requests, as well as accept pull requests.","title":"We Develop with Github"},{"location":"contributors/developers-guide/code-contributions/#we-use-github-flow-so-all-code-changes-happen-through-pull-requests","text":"Pull requests are the best way to propose changes to the codebase (we use Github Flow ). We actively welcome your pull requests: Fork the repo and create your branch from dev . Checkout the Discord, the PRs page, or the Projects page to get an idea of what's already being worked on. If you're interested on working on major changes please get in touch on discord and coordinate with other developers. No sense in doubling up on work if someones already on it. Once you've got an idea of what changes you want to make, create a draft PR as soon as you can to let us know what you're working on and how we can help! If you've changed APIs, update the documentation. Issue that pull request! If you make changes to the dev branch reflect those changes in the active changelog to keep track of changes. Don't forget to add your name/handle/identifier!","title":"We Use Github Flow, So All Code Changes Happen Through Pull Requests"},{"location":"contributors/developers-guide/code-contributions/#any-contributions-you-make-will-be-under-the-mit-software-license","text":"In short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that's a concern.","title":"Any contributions you make will be under the MIT Software License"},{"location":"contributors/developers-guide/code-contributions/#report-bugs-using-githubs-issues","text":"We use GitHub issues to track public bugs. Report a bug by opening a new issue ; it's that easy!","title":"Report bugs using Github's issues"},{"location":"contributors/developers-guide/code-contributions/#write-bug-reports-with-detail-background-and-sample-code","text":"Great Bug Reports tend to have: A quick summary and/or background Steps to reproduce Be specific! Give sample code if you can. This stackoverflow question includes sample code that anyone with a base R setup can run to reproduce what I was seeing What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or stuff you tried that didn't work) People love thorough bug reports. I'm not even kidding.","title":"Write bug reports with detail, background, and sample code"},{"location":"contributors/developers-guide/code-contributions/#license","text":"By contributing, you agree that your contributions will be licensed under its MIT License.","title":"License"},{"location":"contributors/developers-guide/code-contributions/#references","text":"This document was adapted from the open-source contribution guidelines for Facebook's Draft","title":"References"},{"location":"contributors/developers-guide/general-guidelines/","text":"Guidelines Python Vue See The Style Guide","title":"Guidelines"},{"location":"contributors/developers-guide/general-guidelines/#guidelines","text":"","title":"Guidelines"},{"location":"contributors/developers-guide/general-guidelines/#python","text":"","title":"Python"},{"location":"contributors/developers-guide/general-guidelines/#vue","text":"See The Style Guide","title":"Vue"},{"location":"contributors/developers-guide/starting-dev-server/","text":"Development: Getting Started After reading through the Code Contributions Guide and forking the repo you can start working. This project is developed with docker and as such you will be greatly aided by using docker for development. It's not necessary but it is helpful. With Docker Prerequisites Docker docker-compose You can easily start the development stack by running make docker-dev in the root of the project directory. This will run and build the docker-compose.dev.yml file. Without Docker Prerequisites Python 3.9+ Poetry Nodejs npm Once the prerequisites are installed you can cd into the project base directory and run make setup to install the python and node dependencies. Once that is complete you can run make backend and make frontend to start the backend and frontend servers. Make File Reference Run make help for reference clean-purge \u26a0\ufe0f Removes All Developer Data for a fresh server start clean \ud83e\uddf9 Remove all build, test, coverage and Python artifacts clean-pyc \ud83e\uddf9 Remove Python file artifacts clean-test \ud83e\uddf9 Remove test and coverage artifacts test-all \ud83e\uddea Check Lint Format and Testing test \ud83e\uddea Run tests quickly with the default Python lint \ud83e\uddfa Check style with flake8 coverage \u2602\ufe0f Check code coverage quickly with the default Python setup \ud83c\udfd7 Setup Development Instance backend \ud83c\udfac Start Mealie Backend Development Server frontend \ud83c\udfac Start Mealie Frontend Development Server frontend-build \ud83c\udfd7 Build Frontend in frontend/dist docs \ud83d\udcc4 Start Mkdocs Development Server docker-dev \ud83d\udc33 Build and Start Docker Development Stack docker-prod \ud83d\udc33 Build and Start Docker Production Stack code-gen \ud83e\udd16 Run Code-Gen Scripts Before you Commit! Before you commit any changes on the backend/python side you'll want to run make format to format all the code with black. make lint to check with flake8, and make test to run pytests. You can also use make test-all to run both lint and test . Run into another issue? Ask for help on discord","title":"Dev Getting Started"},{"location":"contributors/developers-guide/starting-dev-server/#development-getting-started","text":"After reading through the Code Contributions Guide and forking the repo you can start working. This project is developed with docker and as such you will be greatly aided by using docker for development. It's not necessary but it is helpful.","title":"Development: Getting Started"},{"location":"contributors/developers-guide/starting-dev-server/#with-docker","text":"Prerequisites Docker docker-compose You can easily start the development stack by running make docker-dev in the root of the project directory. This will run and build the docker-compose.dev.yml file.","title":"With Docker"},{"location":"contributors/developers-guide/starting-dev-server/#without-docker","text":"Prerequisites Python 3.9+ Poetry Nodejs npm Once the prerequisites are installed you can cd into the project base directory and run make setup to install the python and node dependencies. Once that is complete you can run make backend and make frontend to start the backend and frontend servers.","title":"Without Docker"},{"location":"contributors/developers-guide/starting-dev-server/#make-file-reference","text":"Run make help for reference clean-purge \u26a0\ufe0f Removes All Developer Data for a fresh server start clean \ud83e\uddf9 Remove all build, test, coverage and Python artifacts clean-pyc \ud83e\uddf9 Remove Python file artifacts clean-test \ud83e\uddf9 Remove test and coverage artifacts test-all \ud83e\uddea Check Lint Format and Testing test \ud83e\uddea Run tests quickly with the default Python lint \ud83e\uddfa Check style with flake8 coverage \u2602\ufe0f Check code coverage quickly with the default Python setup \ud83c\udfd7 Setup Development Instance backend \ud83c\udfac Start Mealie Backend Development Server frontend \ud83c\udfac Start Mealie Frontend Development Server frontend-build \ud83c\udfd7 Build Frontend in frontend/dist docs \ud83d\udcc4 Start Mkdocs Development Server docker-dev \ud83d\udc33 Build and Start Docker Development Stack docker-prod \ud83d\udc33 Build and Start Docker Production Stack code-gen \ud83e\udd16 Run Code-Gen Scripts","title":"Make File Reference"},{"location":"contributors/developers-guide/starting-dev-server/#before-you-commit","text":"Before you commit any changes on the backend/python side you'll want to run make format to format all the code with black. make lint to check with flake8, and make test to run pytests. You can also use make test-all to run both lint and test . Run into another issue? Ask for help on discord","title":"Before you Commit!"},{"location":"contributors/developers-guide/style-guide/","text":"Style Guide Note Unifying styles across the application is an ongoing process, we are working on making the site more consistent. Button Guidelines Buttons should follow the general color/icon scheme as outlined. All buttons should have an icon on the left side of the button and text on the right. Primary action buttons should be the default Vuetify styling. Primary action buttons should be right aligned Secondary buttons should be text or outlined . Text is preferred Other buttons should generally be \"info\" or \"primary\" color and can take any style type depending on context Button Colors and Icons Type Color Icon Default info or primary None Create/New success mdi-plus or $globals.icons.create Update/Save success mdi-save-content or $globals.icons.save Edit info mdi-square-edit-outline or $globals.icons.edit Example < v-btn color = \"primary\" > < v-icon left > mdi-plus </ v-icon > Primary Button </ v-btn >","title":"Style Guide"},{"location":"contributors/developers-guide/style-guide/#style-guide","text":"Note Unifying styles across the application is an ongoing process, we are working on making the site more consistent.","title":"Style Guide"},{"location":"contributors/developers-guide/style-guide/#button-guidelines","text":"Buttons should follow the general color/icon scheme as outlined. All buttons should have an icon on the left side of the button and text on the right. Primary action buttons should be the default Vuetify styling. Primary action buttons should be right aligned Secondary buttons should be text or outlined . Text is preferred Other buttons should generally be \"info\" or \"primary\" color and can take any style type depending on context","title":"Button Guidelines"},{"location":"contributors/developers-guide/style-guide/#button-colors-and-icons","text":"Type Color Icon Default info or primary None Create/New success mdi-plus or $globals.icons.create Update/Save success mdi-save-content or $globals.icons.save Edit info mdi-square-edit-outline or $globals.icons.edit","title":"Button Colors and Icons"},{"location":"contributors/developers-guide/style-guide/#example","text":"< v-btn color = \"primary\" > < v-icon left > mdi-plus </ v-icon > Primary Button </ v-btn >","title":"Example"},{"location":"documentation/admin/backups-and-exports/","text":"Backup and Imports All recipe data can be imported and exported as necessary from the UI. Under the admin page you'll find the section for using Backups and Exports. Danger As this is still a BETA it is recommended that you backup your data often and store in more than one place. Adhere to backup best practices with the 3-2-1 Backup Rule . Prior to upgrading you should perform a backup to limit any data loss. Mealie data that is saved on backups Recipe Data Meal Plan Site Settings Custom Pages User Data Group Data To create an export simply add the tag and the markdown template and click \"Create\" and your backup will be created on the server. The backup is a standard zipfile containing all the images, json files, and rendered jinaj2 templates for each recipe. To view the available variables, open a recipe in the json editor. To import a backup it must be in your backups folder. If it is in the backup folder it will automatically show up as a source to restore from. Selected the desired backup and import the backup file. Backups can be uploaded from the UI as well as added on the file system. Demo API Examples You can use the API to create and retrieve backups remotely from any server that can access the Mealie instance. This is useful for easily managing off-site backups via cron-job or other scheduled tasks. You can find interactive documentation for your API at https://your-mealie-instance.com/docs curl Example Create a backup with curl curl -X 'POST' \\ 'http://localhost:9000/api/backups/export/database' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{ \"tag\": \"July 23rd 2021\", \"options\": { \"recipes\": true, \"settings\": true, \"themes\": true }, \"templates\": [ \"recipes.md\" ] }' wget Example First request a file token with curl: curl -X 'GET' \\ 'http://localhost:9000/api/backups/{file_name}/download' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' Then download the file with wget: wget http://localhost:9000/api/utils/download?token ={ fileToken } Jinja2 Templating On export you can select a template to use to render files using the jinja2 syntax. This can be done to export recipes in other formats besides regular .json. Look at this example for rendering a markdown recipe using the jinja2 syntax. Input ![Recipe Image](../images/{{ recipe.image }}) # {{ recipe.name }} {{ recipe.description }} ## Ingredients {% for ingredient in recipe.recipeIngredient %} - [ ] {{ ingredient }} {% endfor %} ## Instructions {% for step in recipe.recipeInstructions %} - [ ] {{ step.text }} {% endfor %} {% for note in recipe.notes %} **{{ note.title }}:** {{ note.text }} {% endfor %} --- Tags: {{ recipe.tags }} Categories: {{ recipe.categories }} Original URL: {{ recipe.orgURL }} Output ![ Recipe Image ]( ../images/five-spice-popcorn-chicken.jpg ) # Five Spice Popcorn Chicken It\u2019s easy to rely on take-out for some of our favorite Chinese dishes. However, with the right pantry staples, dishes like this Five Spice Popcorn Chicken can become part of your go-to arsenal of recipes. This crispy chicken is coated in a creamy, tangy sauce, made zesty with The Spice Hunter Chinese Five Spice, a blend of star anise, cloves, cinnamon, fennel, and black pepper. ## Ingredients - [ ] 1 tablespoon soy sauce - [ ] 1 tablespoon sugar - [ ] 1 teaspoon The Spice Hunter\u00ae Chinese Five Spice Blend, plus more for serving - [ ] 1 clove garlic, finely grated - [ ] 1 1/2 pounds boneless skinless chicken thighs, cut into roughly 1-inch chunks - [ ] \u2153 cup cornstarch - [ ] 1 large egg, beaten - [ ] \u00be cup all-purpose flour - [ ] Canola or vegetable oil, for frying - [ ] Flaky sea salt - [ ] Scallion, thinly sliced, for serving - [ ] Sriracha mayonnaise, for serving, optional ## Instructions - [ ] In a medium bowl, whisk the soy sauce with the sugar, Chinese Five Spice, and garlic. Add the chicken and toss to coat. Let marinate 15 minutes. - [ ] Drain any excess marinade off of the chicken and toss the chicken with the cornstarch to coat. Once fully coated, add the beaten egg and toss to coat. - [ ] In a large heavy bottomed pot, heat 1-inch of oil to 350. - [ ] Place the flour in a large ziploc bag. Working in batches, transfer a few chicken pieces into the bag with the flour and toss to coat, then remove, leaving excess flour in the bag. - [ ] Carefully place the breaded chicken in the hot oil and fry, turning occasionally, until golden and cooked through about 3 to 4 minutes. - [ ] Using a slotted spoon or spider, transfer the cooked chicken to a paper towel lined plate. Season with salt and additional Chinese Five Spice seasoning. Repeat the flouring and frying with remaining chicken. - [ ] Serve with scallions, more Chinese Five Spice Blend, and optional sriracha mayonnaise. --- Tags: [] Categories: [] Original URL: https://www.bonappetit.com/recipe/five-spice-popcorn-chicken#intcid=_bon-appetit-recipe-bottom-recirc_3cad5ce9-734a-46f8-b503-78c33d2e7279_similar2-3 If you decide you don't like mealie: This is a good way to export into a format that can be imported into another.","title":"Backups and Restore"},{"location":"documentation/admin/backups-and-exports/#backup-and-imports","text":"All recipe data can be imported and exported as necessary from the UI. Under the admin page you'll find the section for using Backups and Exports. Danger As this is still a BETA it is recommended that you backup your data often and store in more than one place. Adhere to backup best practices with the 3-2-1 Backup Rule . Prior to upgrading you should perform a backup to limit any data loss. Mealie data that is saved on backups Recipe Data Meal Plan Site Settings Custom Pages User Data Group Data To create an export simply add the tag and the markdown template and click \"Create\" and your backup will be created on the server. The backup is a standard zipfile containing all the images, json files, and rendered jinaj2 templates for each recipe. To view the available variables, open a recipe in the json editor. To import a backup it must be in your backups folder. If it is in the backup folder it will automatically show up as a source to restore from. Selected the desired backup and import the backup file. Backups can be uploaded from the UI as well as added on the file system.","title":"Backup and Imports"},{"location":"documentation/admin/backups-and-exports/#demo","text":"","title":"Demo"},{"location":"documentation/admin/backups-and-exports/#api-examples","text":"You can use the API to create and retrieve backups remotely from any server that can access the Mealie instance. This is useful for easily managing off-site backups via cron-job or other scheduled tasks. You can find interactive documentation for your API at https://your-mealie-instance.com/docs","title":"API Examples"},{"location":"documentation/admin/backups-and-exports/#curl-example","text":"Create a backup with curl curl -X 'POST' \\ 'http://localhost:9000/api/backups/export/database' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{ \"tag\": \"July 23rd 2021\", \"options\": { \"recipes\": true, \"settings\": true, \"themes\": true }, \"templates\": [ \"recipes.md\" ] }'","title":"curl Example"},{"location":"documentation/admin/backups-and-exports/#wget-example","text":"First request a file token with curl: curl -X 'GET' \\ 'http://localhost:9000/api/backups/{file_name}/download' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' Then download the file with wget: wget http://localhost:9000/api/utils/download?token ={ fileToken }","title":"wget Example"},{"location":"documentation/admin/backups-and-exports/#jinja2-templating","text":"On export you can select a template to use to render files using the jinja2 syntax. This can be done to export recipes in other formats besides regular .json. Look at this example for rendering a markdown recipe using the jinja2 syntax.","title":"Jinja2 Templating"},{"location":"documentation/admin/backups-and-exports/#input","text":"![Recipe Image](../images/{{ recipe.image }}) # {{ recipe.name }} {{ recipe.description }} ## Ingredients {% for ingredient in recipe.recipeIngredient %} - [ ] {{ ingredient }} {% endfor %} ## Instructions {% for step in recipe.recipeInstructions %} - [ ] {{ step.text }} {% endfor %} {% for note in recipe.notes %} **{{ note.title }}:** {{ note.text }} {% endfor %} --- Tags: {{ recipe.tags }} Categories: {{ recipe.categories }} Original URL: {{ recipe.orgURL }}","title":"Input"},{"location":"documentation/admin/backups-and-exports/#output","text":"![ Recipe Image ]( ../images/five-spice-popcorn-chicken.jpg ) # Five Spice Popcorn Chicken It\u2019s easy to rely on take-out for some of our favorite Chinese dishes. However, with the right pantry staples, dishes like this Five Spice Popcorn Chicken can become part of your go-to arsenal of recipes. This crispy chicken is coated in a creamy, tangy sauce, made zesty with The Spice Hunter Chinese Five Spice, a blend of star anise, cloves, cinnamon, fennel, and black pepper. ## Ingredients - [ ] 1 tablespoon soy sauce - [ ] 1 tablespoon sugar - [ ] 1 teaspoon The Spice Hunter\u00ae Chinese Five Spice Blend, plus more for serving - [ ] 1 clove garlic, finely grated - [ ] 1 1/2 pounds boneless skinless chicken thighs, cut into roughly 1-inch chunks - [ ] \u2153 cup cornstarch - [ ] 1 large egg, beaten - [ ] \u00be cup all-purpose flour - [ ] Canola or vegetable oil, for frying - [ ] Flaky sea salt - [ ] Scallion, thinly sliced, for serving - [ ] Sriracha mayonnaise, for serving, optional ## Instructions - [ ] In a medium bowl, whisk the soy sauce with the sugar, Chinese Five Spice, and garlic. Add the chicken and toss to coat. Let marinate 15 minutes. - [ ] Drain any excess marinade off of the chicken and toss the chicken with the cornstarch to coat. Once fully coated, add the beaten egg and toss to coat. - [ ] In a large heavy bottomed pot, heat 1-inch of oil to 350. - [ ] Place the flour in a large ziploc bag. Working in batches, transfer a few chicken pieces into the bag with the flour and toss to coat, then remove, leaving excess flour in the bag. - [ ] Carefully place the breaded chicken in the hot oil and fry, turning occasionally, until golden and cooked through about 3 to 4 minutes. - [ ] Using a slotted spoon or spider, transfer the cooked chicken to a paper towel lined plate. Season with salt and additional Chinese Five Spice seasoning. Repeat the flouring and frying with remaining chicken. - [ ] Serve with scallions, more Chinese Five Spice Blend, and optional sriracha mayonnaise. --- Tags: [] Categories: [] Original URL: https://www.bonappetit.com/recipe/five-spice-popcorn-chicken#intcid=_bon-appetit-recipe-bottom-recirc_3cad5ce9-734a-46f8-b503-78c33d2e7279_similar2-3 If you decide you don't like mealie: This is a good way to export into a format that can be imported into another.","title":"Output"},{"location":"documentation/admin/building-pages/","text":"Building Pages Warning The page building is still experimental and may change. You can provide feedback on any changes you'd like to see on github Custom pages can be created to organize multiple categories into a single page. Links to your custom pages are displayed on the home page sidebar and accessible by all users, however only Administrators can create or update pages. To create a new page navigate to the settings page at /admin/settings and scroll down to the custom pages section. Here you can create, view, and edit your custom pages. To reorder how they are displayed on the sidebar you can drag and drop the pages into the preferred order. Tip To save the order of pages you must click the save button displayed on the bottom of the Custom Page section. This is not necessary for updating individual page data.","title":"Building Pages"},{"location":"documentation/admin/building-pages/#building-pages","text":"Warning The page building is still experimental and may change. You can provide feedback on any changes you'd like to see on github Custom pages can be created to organize multiple categories into a single page. Links to your custom pages are displayed on the home page sidebar and accessible by all users, however only Administrators can create or update pages. To create a new page navigate to the settings page at /admin/settings and scroll down to the custom pages section. Here you can create, view, and edit your custom pages. To reorder how they are displayed on the sidebar you can drag and drop the pages into the preferred order. Tip To save the order of pages you must click the save button displayed on the bottom of the Custom Page section. This is not necessary for updating individual page data.","title":"Building Pages"},{"location":"documentation/admin/dashboard/","text":"Dashboard The dashboard gives you a quick overview of how your Mealie is doing. There is a 'Recipes' card, an overview of the users and groups, an 'Events' card and a 'Backups' card. Recipes 'Recipes' shows how many recipes you have in your catalogue but also checks if you have any untagged or uncategorized ones. If you click on one of these, you are redirected to the Toolbox where you can further organize these recipes. Users This gives an overview of the total number of users for your Mealie instance. The 'manage users' and 'manage groups' button will redirect you to the user-management page . Backups Here you can choose to import an older backup from a previous instance. You could also create a custom backup with your own tag where you can choose for a full backup or only some parts like recipes, users,... If you click 'create', an automatic backup is generated.","title":"Dashboard"},{"location":"documentation/admin/dashboard/#dashboard","text":"The dashboard gives you a quick overview of how your Mealie is doing. There is a 'Recipes' card, an overview of the users and groups, an 'Events' card and a 'Backups' card.","title":"Dashboard"},{"location":"documentation/admin/dashboard/#recipes","text":"'Recipes' shows how many recipes you have in your catalogue but also checks if you have any untagged or uncategorized ones. If you click on one of these, you are redirected to the Toolbox where you can further organize these recipes.","title":"Recipes"},{"location":"documentation/admin/dashboard/#users","text":"This gives an overview of the total number of users for your Mealie instance. The 'manage users' and 'manage groups' button will redirect you to the user-management page .","title":"Users"},{"location":"documentation/admin/dashboard/#backups","text":"Here you can choose to import an older backup from a previous instance. You could also create a custom backup with your own tag where you can choose for a full backup or only some parts like recipes, users,... If you click 'create', an automatic backup is generated.","title":"Backups"},{"location":"documentation/admin/migration-imports/","text":"Migration Chowdown To migrate recipes from a Chowdown Download the code repository as a .zip file Upload the .zip file in the Chowdown section in Mealie Select import on the newly available migration. Nextcloud Recipes Nextcloud recipes can be imported from a zip file that contains the data stored in Nextcloud. The zip file can be uploaded from the frontend or placed in the data/migrations/nextcloud directory. See the example folder structure below to ensure your recipes are able to be imported. nextcloud_recipes.zip \u251c\u2500\u2500 recipe_1 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u251c\u2500\u2500 full.jpg \u2502 \u2514\u2500\u2500 thumb.jpg \u251c\u2500\u2500 recipe_2 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u2514\u2500\u2500 full.jpg \u2514\u2500\u2500 recipe_3 \u2514\u2500\u2500 recipe.json","title":"Recipe Migration"},{"location":"documentation/admin/migration-imports/#migration","text":"","title":"Migration"},{"location":"documentation/admin/migration-imports/#chowdown","text":"To migrate recipes from a Chowdown Download the code repository as a .zip file Upload the .zip file in the Chowdown section in Mealie Select import on the newly available migration.","title":"Chowdown"},{"location":"documentation/admin/migration-imports/#nextcloud-recipes","text":"Nextcloud recipes can be imported from a zip file that contains the data stored in Nextcloud. The zip file can be uploaded from the frontend or placed in the data/migrations/nextcloud directory. See the example folder structure below to ensure your recipes are able to be imported. nextcloud_recipes.zip \u251c\u2500\u2500 recipe_1 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u251c\u2500\u2500 full.jpg \u2502 \u2514\u2500\u2500 thumb.jpg \u251c\u2500\u2500 recipe_2 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u2514\u2500\u2500 full.jpg \u2514\u2500\u2500 recipe_3 \u2514\u2500\u2500 recipe.json","title":"Nextcloud Recipes"},{"location":"documentation/admin/site-settings/","text":"Site Settings Your sites settings panel can only be accessed by administrators. This is where you can customize your site for all users. Home Page Settings Option Description Show Recent To display the recent recipes section on the home page Card Per Section The amount of cards displayed in each section on the home page Home Page Sections Category sections to include on the home page Language The default site language First day of the week The default start day of the week used in Meal Plans Custom Pages Create a custom page which appears in the sidebar with the categories you chose","title":"Site Settings"},{"location":"documentation/admin/site-settings/#site-settings","text":"Your sites settings panel can only be accessed by administrators. This is where you can customize your site for all users.","title":"Site Settings"},{"location":"documentation/admin/site-settings/#home-page-settings","text":"Option Description Show Recent To display the recent recipes section on the home page Card Per Section The amount of cards displayed in each section on the home page Home Page Sections Category sections to include on the home page Language The default site language First day of the week The default start day of the week used in Meal Plans Custom Pages Create a custom page which appears in the sidebar with the categories you chose","title":"Home Page Settings"},{"location":"documentation/admin/user-management/","text":"User Management As of version v0.4.0 users have limited functionality, but they will offer more permissions and structure as time goes on. To understand the different systems, see each section below. Note, that by default all users will be assigned the default group. If you're only managing one household you won't need to do anything to set up a new group. Users and Groups Admins Mealie admins are super users that have access to all user data (excluding passwords). All admins can perform administrative tasks like adding users, resetting user passwords, backing up the database, migrating data, and managing site settings. Admins Can All User Actions Adjust Site Settings Create and Update Users Create and Update Groups Generate User Sign-up Links Migrate Data from other Services Backup Site Data Users A single user created by an Admin that has basic privileges to edit their profile, create and edit recipes. Users Can Manage Their Profile Create, Edit, and Update Recipes Create, Edit, and Update Mealplans (By Group) Set Mealplan Categories Create and Schedule Webhooks (By Group) Groups User groups are a collection of users that are associated together. Typically used for separate households sharing a single instance. Groups Share Mealplans Mealplan Settings Webhooks Warning As of v0.4.0 any authenticated user is able to perform any action on the backend server through the API. To limit a standard users scope, the pages on the frontend are limited. Proper support for permission structures on the backend API will come in a later version. Startup On the first startup you'll need to login to Mealie using the default username and password changeme@email.com and MyPassword or the default set through the env variable. On first login you'll be required to reset your password. After resetting your password you should also change your email address as appropriate. This will be used for logins on all future requests. Tip Your default password environment variable will be the default password for all new users that are created. This is stored in plain text and should not be used anywhere else. Creating and Editing Users There are two ways to create users in Mealie. Manually Creating a User In the Manage Users section you are able to create a user by providing the necessary information in the pop-up dialog. User Name Email User Group If they are an Admin When creating users manually, their password will be set from the default assigned by the ENV variable. Sign Up Links You can generate sign-up links in the Manage Users section. Select the \"create link\" button and provide the name of the link and if the user will be an administrator. Once a link is created it will populate in the table where you'll be able to see all active links, delete a link, and copy the link as needed. Tip When a link is used it is automatically removed from the database. Creating Groups You can easily create and manage groups via the frontend in the admin panel under \"Manage Users\". Navigate to the groups tab and you'll find a \"create group\" button as well as a list of all groups in your database. To create a group, select the \"create group\" button and provide a name for the new group. Once created you can now assign users to the new group. Tip User Groups can only be deleted if no users are a part of the group. If you want to delete a group, you must assign the users to another group before removing. Password Reset If a user forgets their password an administrator is able to reset their password through the user management page. In the user table, select edit. In the popup window click the \"Reset Password\" to reset a user's password to the default. This is either 'MyPassword' or set through an environment variable. See the Installation Page for more details on environment variables.","title":"User Management"},{"location":"documentation/admin/user-management/#user-management","text":"As of version v0.4.0 users have limited functionality, but they will offer more permissions and structure as time goes on. To understand the different systems, see each section below. Note, that by default all users will be assigned the default group. If you're only managing one household you won't need to do anything to set up a new group. Users and Groups Admins Mealie admins are super users that have access to all user data (excluding passwords). All admins can perform administrative tasks like adding users, resetting user passwords, backing up the database, migrating data, and managing site settings. Admins Can All User Actions Adjust Site Settings Create and Update Users Create and Update Groups Generate User Sign-up Links Migrate Data from other Services Backup Site Data Users A single user created by an Admin that has basic privileges to edit their profile, create and edit recipes. Users Can Manage Their Profile Create, Edit, and Update Recipes Create, Edit, and Update Mealplans (By Group) Set Mealplan Categories Create and Schedule Webhooks (By Group) Groups User groups are a collection of users that are associated together. Typically used for separate households sharing a single instance. Groups Share Mealplans Mealplan Settings Webhooks Warning As of v0.4.0 any authenticated user is able to perform any action on the backend server through the API. To limit a standard users scope, the pages on the frontend are limited. Proper support for permission structures on the backend API will come in a later version.","title":"User Management"},{"location":"documentation/admin/user-management/#startup","text":"On the first startup you'll need to login to Mealie using the default username and password changeme@email.com and MyPassword or the default set through the env variable. On first login you'll be required to reset your password. After resetting your password you should also change your email address as appropriate. This will be used for logins on all future requests. Tip Your default password environment variable will be the default password for all new users that are created. This is stored in plain text and should not be used anywhere else.","title":"Startup"},{"location":"documentation/admin/user-management/#creating-and-editing-users","text":"There are two ways to create users in Mealie.","title":"Creating and Editing Users"},{"location":"documentation/admin/user-management/#manually-creating-a-user","text":"In the Manage Users section you are able to create a user by providing the necessary information in the pop-up dialog. User Name Email User Group If they are an Admin When creating users manually, their password will be set from the default assigned by the ENV variable.","title":"Manually Creating a User"},{"location":"documentation/admin/user-management/#sign-up-links","text":"You can generate sign-up links in the Manage Users section. Select the \"create link\" button and provide the name of the link and if the user will be an administrator. Once a link is created it will populate in the table where you'll be able to see all active links, delete a link, and copy the link as needed. Tip When a link is used it is automatically removed from the database.","title":"Sign Up Links"},{"location":"documentation/admin/user-management/#creating-groups","text":"You can easily create and manage groups via the frontend in the admin panel under \"Manage Users\". Navigate to the groups tab and you'll find a \"create group\" button as well as a list of all groups in your database. To create a group, select the \"create group\" button and provide a name for the new group. Once created you can now assign users to the new group. Tip User Groups can only be deleted if no users are a part of the group. If you want to delete a group, you must assign the users to another group before removing.","title":"Creating Groups"},{"location":"documentation/admin/user-management/#password-reset","text":"If a user forgets their password an administrator is able to reset their password through the user management page. In the user table, select edit. In the popup window click the \"Reset Password\" to reset a user's password to the default. This is either 'MyPassword' or set through an environment variable. See the Installation Page for more details on environment variables.","title":"Password Reset"},{"location":"documentation/community-guide/bulk-url-import/","text":"Info This guide was submitted by a community member. Find something wrong? Submit a PR to get it fixed! Recipes can be imported in bulk from a file containing a list of URLs. This can be done using the following bash or python scripts with the list file containing one URL per line. Bash #!/bin/bash function authentification () { auth = $( curl -X 'POST' \\ \" $3 /api/auth/token\" \\ -H 'accept: application/json' \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'grant_type=&username=' $1 '&password=' $2 '&scope=&client_id=&client_secret=' ) echo $auth | sed -e 's/.*token\":\"\\(.*\\)\",.*/\\1/' } function import_from_file () { while IFS = read -r line do echo $line curl -X 'POST' \\ \" $3 /api/recipes/create-url\" \\ -H \"Authorization: Bearer $2 \" \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{\"url\": \"' $line '\" }' echo done < \" $1 \" } input = \"list\" mail = \"changeme@email.com\" password = \"MyPassword\" mealie_url = http://localhost:9000 token = $( authentification $mail $password $mealie_url ) import_from_file $input $token $mealie_url Python import requests import re def authentification ( mail , password , mealie_url ): headers = { 'accept' : 'application/json' , 'Content-Type' : 'application/x-www-form-urlencoded' , } data = { 'grant_type' : '' , 'username' : mail , 'password' : password , 'scope' : '' , 'client_id' : '' , 'client_secret' : '' } auth = requests . post ( mealie_url + \"/api/auth/token\" , headers = headers , data = data ) token = re . sub ( r '.*token\":\"(.*)\",.*' , r '\\1' , auth . text ) return token def import_from_file ( input_file , token , mealie_url ): with open ( input_file ) as fp : for l in fp : line = re . sub ( r '(.*)\\n' , r '\\1' , l ) print ( line ) headers = { 'Authorization' : \"Bearer \" + token , 'accept' : 'application/json' , 'Content-Type' : 'application/json' } data = { 'url' : line } response = requests . post ( mealie_url + \"/api/recipes/create-url\" , headers = headers , json = data ) print ( response . text ) input_file = \"list\" mail = \"changeme@email.com\" password = \"MyPassword\" mealie_url = \"http://localhost:9000\" token = authentification ( mail , password , mealie_url ) import_from_file ( input_file , token , mealie_url )","title":"Bulk Url Import"},{"location":"documentation/community-guide/bulk-url-import/#bash","text":"#!/bin/bash function authentification () { auth = $( curl -X 'POST' \\ \" $3 /api/auth/token\" \\ -H 'accept: application/json' \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'grant_type=&username=' $1 '&password=' $2 '&scope=&client_id=&client_secret=' ) echo $auth | sed -e 's/.*token\":\"\\(.*\\)\",.*/\\1/' } function import_from_file () { while IFS = read -r line do echo $line curl -X 'POST' \\ \" $3 /api/recipes/create-url\" \\ -H \"Authorization: Bearer $2 \" \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{\"url\": \"' $line '\" }' echo done < \" $1 \" } input = \"list\" mail = \"changeme@email.com\" password = \"MyPassword\" mealie_url = http://localhost:9000 token = $( authentification $mail $password $mealie_url ) import_from_file $input $token $mealie_url","title":"Bash"},{"location":"documentation/community-guide/bulk-url-import/#python","text":"import requests import re def authentification ( mail , password , mealie_url ): headers = { 'accept' : 'application/json' , 'Content-Type' : 'application/x-www-form-urlencoded' , } data = { 'grant_type' : '' , 'username' : mail , 'password' : password , 'scope' : '' , 'client_id' : '' , 'client_secret' : '' } auth = requests . post ( mealie_url + \"/api/auth/token\" , headers = headers , data = data ) token = re . sub ( r '.*token\":\"(.*)\",.*' , r '\\1' , auth . text ) return token def import_from_file ( input_file , token , mealie_url ): with open ( input_file ) as fp : for l in fp : line = re . sub ( r '(.*)\\n' , r '\\1' , l ) print ( line ) headers = { 'Authorization' : \"Bearer \" + token , 'accept' : 'application/json' , 'Content-Type' : 'application/json' } data = { 'url' : line } response = requests . post ( mealie_url + \"/api/recipes/create-url\" , headers = headers , json = data ) print ( response . text ) input_file = \"list\" mail = \"changeme@email.com\" password = \"MyPassword\" mealie_url = \"http://localhost:9000\" token = authentification ( mail , password , mealie_url ) import_from_file ( input_file , token , mealie_url )","title":"Python"},{"location":"documentation/community-guide/home-assistant/","text":"Info This guide was submitted by a community member. Find something wrong? Submit a PR to get it fixed! In a lot of ways, Home Assistant is why this project exists! Since Mealie has a robust API it makes it a great fit for interacting with Home Assistant and pulling information into your dashboard. Get Todays Meal in Lovelace Starting in v0.4.1 you are now able to use the uri /api\u200b/meal-plans\u200b/today\u200b/image?group_name=Home to directly access the image to todays meal. This makes it incredibly easy to include the image into your Home Assistant Dashboard using the picture entity. Here's an example where sensor.mealie_todays_meal is pulling in the meal-plan name and I'm using the url to get the image. type : picture-entity entity : sensor.mealie_todays_meal name : Dinner Tonight show_state : true show_name : true image : 'http://localhost:9000/api/meal-plans/today/image?group_name=Home' style : . : | ha-card { max-height: 300px !important; overflow: hidden; display: flex; align-items: center; justify-content: center; } The sensor that gets the name of the meal can be achieved using the following REST sensor in Home Assistant sensor : - platform : rest resource : 'http://localhost:9000/api/meal-plans/today' method : GET name : Mealie todays meal headers : Authorization : Bearer MySuperSecretBearerCode value_template : \"{{ value_json.name }}\" The Bearer token can be created from the User Settings page (https://hay-kot.github.io/mealie/documentation/users-groups/user-settings/#api-key-generation) Tip Due to how Home Assistant works with images, I had to include the additional styling to get the images to not appear distorted. This includes and additional installation from HACS.","title":"Home Assistant"},{"location":"documentation/community-guide/home-assistant/#get-todays-meal-in-lovelace","text":"Starting in v0.4.1 you are now able to use the uri /api\u200b/meal-plans\u200b/today\u200b/image?group_name=Home to directly access the image to todays meal. This makes it incredibly easy to include the image into your Home Assistant Dashboard using the picture entity. Here's an example where sensor.mealie_todays_meal is pulling in the meal-plan name and I'm using the url to get the image. type : picture-entity entity : sensor.mealie_todays_meal name : Dinner Tonight show_state : true show_name : true image : 'http://localhost:9000/api/meal-plans/today/image?group_name=Home' style : . : | ha-card { max-height: 300px !important; overflow: hidden; display: flex; align-items: center; justify-content: center; } The sensor that gets the name of the meal can be achieved using the following REST sensor in Home Assistant sensor : - platform : rest resource : 'http://localhost:9000/api/meal-plans/today' method : GET name : Mealie todays meal headers : Authorization : Bearer MySuperSecretBearerCode value_template : \"{{ value_json.name }}\" The Bearer token can be created from the User Settings page (https://hay-kot.github.io/mealie/documentation/users-groups/user-settings/#api-key-generation) Tip Due to how Home Assistant works with images, I had to include the additional styling to get the images to not appear distorted. This includes and additional installation from HACS.","title":"Get Todays Meal in Lovelace"},{"location":"documentation/community-guide/ios/","text":"Using iOS Shortcuts with Mealie User brasilikum opened an issue on the main repo about how they had created an iOS shortcut for interested users. This is a useful utility for iOS users who browse for recipes in their web browser from their devices. Recent updates to Mealie has made this original shortcut break. Reddit user BooNooBooNooB has helped to create a new working version. Don't know what an iOS shortcut is? Neither did I! Experienced iOS users may already be familiar with this utility but for the uninitiated, here is the official Apple explanation: A shortcut is a quick way to get one or more tasks done with your apps. The Shortcuts app lets you create your own shortcuts with multiple steps. For example, build a \u201cSurf Time\u201d shortcut that grabs the surf report, gives an ETA to the beach, and launches your surf music playlist. Basically it is a visual scripting language that lets a user build an automation in a guided fashion. The automation can be shared with anyone but if it is a user creation, you'll have to jump through a few hoops to make an untrusted automation work on your device. You need to replace username and password with the login information for your mealie instance. Then, you need to put in your mealie domain. The API port of :9000 is not needed when putting your domain in the text field. You should now be able to share a website to the shortcut and have mealie grab all the necessary information!","title":"iOS Shortcuts"},{"location":"documentation/community-guide/ios/#using-ios-shortcuts-with-mealie","text":"User brasilikum opened an issue on the main repo about how they had created an iOS shortcut for interested users. This is a useful utility for iOS users who browse for recipes in their web browser from their devices. Recent updates to Mealie has made this original shortcut break. Reddit user BooNooBooNooB has helped to create a new working version. Don't know what an iOS shortcut is? Neither did I! Experienced iOS users may already be familiar with this utility but for the uninitiated, here is the official Apple explanation: A shortcut is a quick way to get one or more tasks done with your apps. The Shortcuts app lets you create your own shortcuts with multiple steps. For example, build a \u201cSurf Time\u201d shortcut that grabs the surf report, gives an ETA to the beach, and launches your surf music playlist. Basically it is a visual scripting language that lets a user build an automation in a guided fashion. The automation can be shared with anyone but if it is a user creation, you'll have to jump through a few hoops to make an untrusted automation work on your device. You need to replace username and password with the login information for your mealie instance. Then, you need to put in your mealie domain. The API port of :9000 is not needed when putting your domain in the text field. You should now be able to share a website to the shortcut and have mealie grab all the necessary information!","title":"Using iOS Shortcuts with Mealie"},{"location":"documentation/community-guide/swag/","text":"Using SWAG as Reverse Proxy Info This guide was submitted by a community member. Find something wrong? Submit a PR to get it fixed! To make the setup of a Reverse Proxy much easier, Linuxserver.io developed SWAG SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx web server and reverse proxy with PHP support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention. Step 1: Get a domain The first step is to grab a dynamic DNS if you don't have your own subdomain already. You can get this from for example DuckDNS . Step 2: Set-up SWAG Then you will need to set up SWAG, the variables of the docker-compose are explained on the Github page of SWAG . This is an example of how to set it up using duckdns and docker-compose. docker-compose.yml version : \"2.1\" services : swag : image : ghcr.io/linuxserver/swag container_name : swag cap_add : - NET_ADMIN environment : - PUID=1000 - PGID=1000 - TZ=Europe/Brussels - URL=<mydomain.duckdns> - SUBDOMAINS=wildcard - VALIDATION=duckdns - CERTPROVIDER= #optional - DNSPLUGIN= #optional - DUCKDNSTOKEN=<duckdnstoken> - EMAIL=<e-mail> #optional - ONLY_SUBDOMAINS=false #optional - EXTRA_DOMAINS=<extradomains> #optional - STAGING=false #optional volumes : - /etc/config/swag:/config ports : - 443:443 restart : unless-stopped Don't forget to change the mydomain.duckns into your personal domain and the duckdnstoken into your token and remove the brackets. Step 3: Change the config files Navigate to the config folder of SWAG and head to proxy-confs . If you used the example above, you should navigate to: /etc/config/swag/nginx/proxy-confs/ . There are a lot of preconfigured files to use for different apps such as radarr, sonarr, overseerr, ... To use the bundled configuration file, simply rename mealie.subdomain.conf.sample in the proxy-confs folder to mealie.subdomain.conf . Alternatively, you can create a new file mealie.subdomain.conf in proxy-confs with the following configuration: mealie.subdomain.conf server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name mealie.*; include /config/nginx/ssl.conf; client_max_body_size 0; location / { include /config/nginx/proxy.conf; include /config/nginx/resolver.conf; set $upstream_app mealie; set $upstream_port 80; set $upstream_proto http; proxy_pass $upstream_proto://$upstream_app:$upstream_port; } } Step 4: Port-forward port 443 Since SWAG allows you to set up a secure connection, you will need to open port 443 on your router for encrypted traffic. This is way more secure than port 80 for http. Step 5: Restart SWAG When you change anything in the config of Nginx, you will need to restart the container using docker restart swag . If everything went well, you can now access mealie on the subdomain you configured: mealie.mydomain.duckdns.org","title":"Reverse Proxy (SWAG)"},{"location":"documentation/community-guide/swag/#using-swag-as-reverse-proxy","text":"Info This guide was submitted by a community member. Find something wrong? Submit a PR to get it fixed! To make the setup of a Reverse Proxy much easier, Linuxserver.io developed SWAG SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx web server and reverse proxy with PHP support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.","title":"Using SWAG as Reverse Proxy"},{"location":"documentation/community-guide/swag/#step-1-get-a-domain","text":"The first step is to grab a dynamic DNS if you don't have your own subdomain already. You can get this from for example DuckDNS .","title":"Step 1: Get a domain"},{"location":"documentation/community-guide/swag/#step-2-set-up-swag","text":"Then you will need to set up SWAG, the variables of the docker-compose are explained on the Github page of SWAG . This is an example of how to set it up using duckdns and docker-compose. docker-compose.yml version : \"2.1\" services : swag : image : ghcr.io/linuxserver/swag container_name : swag cap_add : - NET_ADMIN environment : - PUID=1000 - PGID=1000 - TZ=Europe/Brussels - URL=<mydomain.duckdns> - SUBDOMAINS=wildcard - VALIDATION=duckdns - CERTPROVIDER= #optional - DNSPLUGIN= #optional - DUCKDNSTOKEN=<duckdnstoken> - EMAIL=<e-mail> #optional - ONLY_SUBDOMAINS=false #optional - EXTRA_DOMAINS=<extradomains> #optional - STAGING=false #optional volumes : - /etc/config/swag:/config ports : - 443:443 restart : unless-stopped Don't forget to change the mydomain.duckns into your personal domain and the duckdnstoken into your token and remove the brackets.","title":"Step 2: Set-up SWAG"},{"location":"documentation/community-guide/swag/#step-3-change-the-config-files","text":"Navigate to the config folder of SWAG and head to proxy-confs . If you used the example above, you should navigate to: /etc/config/swag/nginx/proxy-confs/ . There are a lot of preconfigured files to use for different apps such as radarr, sonarr, overseerr, ... To use the bundled configuration file, simply rename mealie.subdomain.conf.sample in the proxy-confs folder to mealie.subdomain.conf . Alternatively, you can create a new file mealie.subdomain.conf in proxy-confs with the following configuration: mealie.subdomain.conf server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name mealie.*; include /config/nginx/ssl.conf; client_max_body_size 0; location / { include /config/nginx/proxy.conf; include /config/nginx/resolver.conf; set $upstream_app mealie; set $upstream_port 80; set $upstream_proto http; proxy_pass $upstream_proto://$upstream_app:$upstream_port; } }","title":"Step 3: Change the config files"},{"location":"documentation/community-guide/swag/#step-4-port-forward-port-443","text":"Since SWAG allows you to set up a secure connection, you will need to open port 443 on your router for encrypted traffic. This is way more secure than port 80 for http.","title":"Step 4: Port-forward port 443"},{"location":"documentation/community-guide/swag/#step-5-restart-swag","text":"When you change anything in the config of Nginx, you will need to restart the container using docker restart swag . If everything went well, you can now access mealie on the subdomain you configured: mealie.mydomain.duckdns.org","title":"Step 5: Restart SWAG"},{"location":"documentation/getting-started/api-usage/","text":"Usage Getting a Token Mealie supports long-live api tokens in the user frontend. See user settings page Key Components Exploring Your Local API On your local installation you can access interactive API documentation that provides curl examples and expected results. This allows you to easily test and interact with your API to identify places to include your own functionality. You can visit the documentation at http://mealie.yourdomain.com/docs or see the example at the Demo Site Recipe Extras Recipes extras are a key feature of the Mealie API. They allow you to create custom json key/value pairs within a recipe to reference from 3rd part applications. You can use these keys to contain information to trigger automation or custom messages to relay to your desired device. For example you could add {\"message\": \"Remember to thaw the chicken\"} to a recipe and use the webhooks built into mealie to send that message payload to a destination to be processed.","title":"API"},{"location":"documentation/getting-started/api-usage/#usage","text":"","title":"Usage"},{"location":"documentation/getting-started/api-usage/#getting-a-token","text":"Mealie supports long-live api tokens in the user frontend. See user settings page","title":"Getting a Token"},{"location":"documentation/getting-started/api-usage/#key-components","text":"","title":"Key Components"},{"location":"documentation/getting-started/api-usage/#exploring-your-local-api","text":"On your local installation you can access interactive API documentation that provides curl examples and expected results. This allows you to easily test and interact with your API to identify places to include your own functionality. You can visit the documentation at http://mealie.yourdomain.com/docs or see the example at the Demo Site","title":"Exploring Your Local API"},{"location":"documentation/getting-started/api-usage/#recipe-extras","text":"Recipes extras are a key feature of the Mealie API. They allow you to create custom json key/value pairs within a recipe to reference from 3rd part applications. You can use these keys to contain information to trigger automation or custom messages to relay to your desired device. For example you could add {\"message\": \"Remember to thaw the chicken\"} to a recipe and use the webhooks built into mealie to send that message payload to a destination to be processed.","title":"Recipe Extras"},{"location":"documentation/getting-started/install/","text":"Installation To deploy mealie on your local network it is highly recommended to use docker to deploy the image straight from dockerhub. Using the docker-compose below you should be able to get a stack up and running easily by changing a few default values and deploying. You can deploy with either SQLite (default) or Postgres. SQLite is sufficient for most use cases. Additionally, with mealies automated backup and restore functionality, you can easily move between SQLite and Postgres as you wish. Get Docker Mealie on Dockerhub linux/amd64 linux/arm64 Quick Start - Docker CLI Deployment with the Docker CLI can be done with docker run and specify the database type, in this case sqlite , setting the exposed port 9925 , mounting the current directory, and pull the latest image. After the image is up and running you can navigate to http://your.ip.address:9925 and you'll should see mealie up and running! docker run \\ -p 9925 :80 \\ -v ` pwd ` : '/app/data/' \\ hkotel/mealie:latest Default Credentials Username: changeme@email.com Password: MyPassword Docker Compose with SQLite Deployment with docker-compose is the recommended method for deployment. The example below will create an instance of mealie available on port 9925 with the data volume mounted from the local directory. To use, create a docker-compose.yml file, paste the contents below and save. In the terminal run docker-compose up -d to start the container. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9925:80 environment : PUID : 1000 PGID : 1000 TZ : America/Anchorage # Default Recipe Settings RECIPE_PUBLIC : 'true' RECIPE_SHOW_NUTRITION : 'true' RECIPE_SHOW_ASSETS : 'true' RECIPE_LANDSCAPE_VIEW : 'true' RECIPE_DISABLE_COMMENTS : 'false' RECIPE_DISABLE_AMOUNT : 'false' # Gunicorn WEB_CONCURRENCY : 2 # WORKERS_PER_CORE: 0.5 # MAX_WORKERS: 8 volumes : - ./mealie/data/:/app/data Docker Compose with Postgres (BETA) Postgres support was introduced in v0.5.0. At this point it should be used with caution and frequent backups. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9090:80 depends_on : - postgres environment : PUID : 1000 PGID : 1000 TZ : America/Anchorage # Database Settings DB_ENGINE : postgres # Optional: 'sqlite', 'postgres' POSTGRES_USER : mealie POSTGRES_PASSWORD : mealie POSTGRES_SERVER : postgres POSTGRES_PORT : 5432 POSTGRES_DB : mealie # Default Recipe Settings RECIPE_PUBLIC : 'true' RECIPE_SHOW_NUTRITION : 'true' RECIPE_SHOW_ASSETS : 'true' RECIPE_LANDSCAPE_VIEW : 'true' RECIPE_DISABLE_COMMENTS : 'false' RECIPE_DISABLE_AMOUNT : 'false' # Gunicorn WEB_CONCURRENCY : 2 # WORKERS_PER_CORE: 0.5 # MAX_WORKERS: 8 volumes : - ./mealie/data/:/app/data postgres : container_name : postgres image : postgres restart : always environment : POSTGRES_PASSWORD : mealie POSTGRES_USER : mealie Env Variables Variables Default Description PUID 911 UserID permissions between host OS and container PGID 911 GroupID permissions between host OS and container DEFAULT_GROUP Home The default group for users DEFAULT_EMAIL changeme@email.com The default username for the superuser BASE_URL http://localhost:8080 Used for Notifications DB_ENGINE sqlite Optional: 'sqlite', 'postgres' POSTGRES_USER mealie Postgres database user POSTGRES_PASSWORD mealie Postgres database password POSTGRES_SERVER postgres Postgres database server address POSTGRES_PORT 5432 Postgres database port POSTGRES_DB mealie Postgres database name TOKEN_TIME 2 The time in hours that a login/auth token is valid RECIPE_PUBLIC True Default Recipe Settings - Make Recipe Public RECIPE_SHOW_NUTRITION True Default Recipe Settings - Show Recipe Nutrition RECIPE_SHOW_ASSETS True Default Recipe Settings - Show Recipe Assets RECIPE_LANDSCAPE_VIEW True Default Recipe Settings - Set Landscape View RECIPE_DISABLE_COMMENTS False Default Recipe Settings - Disable Comments RECIPE_DISABLE_AMOUNT False Default Recipe Settings - Disable Amount API_PORT 9000 The port exposed by backend API. Do not change this if you're running in Docker API_DOCS True Turns on/off access to the API documentation locally. TZ UTC Must be set to get correct date/time on the server WORKERS_PER_CORE 1 Set the number of workers to the number of CPU cores multiplied by this value (Value * CPUs). More info here MAX_WORKERS Set the maximum number of workers to use. Default is not set meaning unlimited. More info here WEB_CONCURRENCY 2 Override the automatic definition of number of workers. More info here Raspberry Pi 4 Fatal Python error: init_interp_main: can't initialize time Some users experience an problem with running the linux/arm/v7 container on Raspberry Pi 4. This is not a problem with the Mealie container, but with a bug in the hosts Docker installation. Update the host RP4 using instructions , summarized here: wget http://ftp.us.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.5.1-1_armhf.deb sudo dpkg -i libseccomp2_2.5.1-1_armhf.deb Advanced Not Required The items below are completely optional and are not required to manage or install your Mealie instance. Custom Caddy File The Docker image provided by Mealie contains both the API and the html bundle in one convenient image. This is done by using a proxy server to serve different parts of the application depending on the URL/URI. Requests sent to /api/* or /docs will be directed to the API, anything else will be served the static web files. Below is the default Caddyfile that is used to proxy requests. You can override this file by mounting an alternative Caddyfile to /app/Caddyfile . { auto_https off admin off } :80 { @proxied path /api/* /docs /openapi.json root * /app/dist encode gzip uri strip_suffix / handle_path /api/recipes/image/* { root * /app/data/img/ file_server } handle @proxied { reverse_proxy http://127.0.0.1:9000 } handle { try_files {path}.html {path} / file_server } } Deployed without Docker Unsupported Deployment If you are experiencing a problem with manual deployment, please do not submit a github issue unless it is related to an aspect of the application. For deployment help, the discord server is a better place to find support. Alternatively, this project is built on Python and SQLite so you may run it as a python application on your server. This is not a supported options for deployment and is only here as a reference for those who would like to do this on their own. To get started you can clone this repository into a directory of your choice and use the instructions below as a reference for how to get started. There are three parts to the Mealie application Frontend/Static Files Backend API Proxy Server Frontend/ Static Files The frontend static files are generated with npm run build . This is done during the build process with docker. If you choose to deploy this as a system application you must do this process yourself. In the project directory run cd frontend to change directories into the frontend directory and run npm install and then npm run build . This will generate the static files in a dist folder in the frontend directory. Backend API The backend API is build with Python, FastAPI, and SQLite and requires Python 3.9, and Poetry. Once the requirements are installed, in the project directory you can run the command poetry install to create a python virtual environment and install the python dependencies. Once the dependencies are installed you should be ready to run the server. To initialize that database you need to first run python mealie/db/init_db.py . Then to start The web server, you run the command uvicorn mealie.app:app --host 0.0.0.0 --port 9000 Proxy Server You must use a proxy server to server up the static files created with npm run build and proxy requests to the API. In the docker build this is done with Caddy. You can use the CaddyFile in the section above as a reference. One important thing to keep in mind is that you should drop any trailing / in the url. Not doing this may result in failed API requests.","title":"Installation"},{"location":"documentation/getting-started/install/#installation","text":"To deploy mealie on your local network it is highly recommended to use docker to deploy the image straight from dockerhub. Using the docker-compose below you should be able to get a stack up and running easily by changing a few default values and deploying. You can deploy with either SQLite (default) or Postgres. SQLite is sufficient for most use cases. Additionally, with mealies automated backup and restore functionality, you can easily move between SQLite and Postgres as you wish. Get Docker Mealie on Dockerhub linux/amd64 linux/arm64","title":"Installation"},{"location":"documentation/getting-started/install/#quick-start-docker-cli","text":"Deployment with the Docker CLI can be done with docker run and specify the database type, in this case sqlite , setting the exposed port 9925 , mounting the current directory, and pull the latest image. After the image is up and running you can navigate to http://your.ip.address:9925 and you'll should see mealie up and running! docker run \\ -p 9925 :80 \\ -v ` pwd ` : '/app/data/' \\ hkotel/mealie:latest Default Credentials Username: changeme@email.com Password: MyPassword","title":"Quick Start - Docker CLI"},{"location":"documentation/getting-started/install/#docker-compose-with-sqlite","text":"Deployment with docker-compose is the recommended method for deployment. The example below will create an instance of mealie available on port 9925 with the data volume mounted from the local directory. To use, create a docker-compose.yml file, paste the contents below and save. In the terminal run docker-compose up -d to start the container. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9925:80 environment : PUID : 1000 PGID : 1000 TZ : America/Anchorage # Default Recipe Settings RECIPE_PUBLIC : 'true' RECIPE_SHOW_NUTRITION : 'true' RECIPE_SHOW_ASSETS : 'true' RECIPE_LANDSCAPE_VIEW : 'true' RECIPE_DISABLE_COMMENTS : 'false' RECIPE_DISABLE_AMOUNT : 'false' # Gunicorn WEB_CONCURRENCY : 2 # WORKERS_PER_CORE: 0.5 # MAX_WORKERS: 8 volumes : - ./mealie/data/:/app/data","title":"Docker Compose with SQLite"},{"location":"documentation/getting-started/install/#docker-compose-with-postgres-beta","text":"Postgres support was introduced in v0.5.0. At this point it should be used with caution and frequent backups. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9090:80 depends_on : - postgres environment : PUID : 1000 PGID : 1000 TZ : America/Anchorage # Database Settings DB_ENGINE : postgres # Optional: 'sqlite', 'postgres' POSTGRES_USER : mealie POSTGRES_PASSWORD : mealie POSTGRES_SERVER : postgres POSTGRES_PORT : 5432 POSTGRES_DB : mealie # Default Recipe Settings RECIPE_PUBLIC : 'true' RECIPE_SHOW_NUTRITION : 'true' RECIPE_SHOW_ASSETS : 'true' RECIPE_LANDSCAPE_VIEW : 'true' RECIPE_DISABLE_COMMENTS : 'false' RECIPE_DISABLE_AMOUNT : 'false' # Gunicorn WEB_CONCURRENCY : 2 # WORKERS_PER_CORE: 0.5 # MAX_WORKERS: 8 volumes : - ./mealie/data/:/app/data postgres : container_name : postgres image : postgres restart : always environment : POSTGRES_PASSWORD : mealie POSTGRES_USER : mealie","title":"Docker Compose with Postgres (BETA)"},{"location":"documentation/getting-started/install/#env-variables","text":"Variables Default Description PUID 911 UserID permissions between host OS and container PGID 911 GroupID permissions between host OS and container DEFAULT_GROUP Home The default group for users DEFAULT_EMAIL changeme@email.com The default username for the superuser BASE_URL http://localhost:8080 Used for Notifications DB_ENGINE sqlite Optional: 'sqlite', 'postgres' POSTGRES_USER mealie Postgres database user POSTGRES_PASSWORD mealie Postgres database password POSTGRES_SERVER postgres Postgres database server address POSTGRES_PORT 5432 Postgres database port POSTGRES_DB mealie Postgres database name TOKEN_TIME 2 The time in hours that a login/auth token is valid RECIPE_PUBLIC True Default Recipe Settings - Make Recipe Public RECIPE_SHOW_NUTRITION True Default Recipe Settings - Show Recipe Nutrition RECIPE_SHOW_ASSETS True Default Recipe Settings - Show Recipe Assets RECIPE_LANDSCAPE_VIEW True Default Recipe Settings - Set Landscape View RECIPE_DISABLE_COMMENTS False Default Recipe Settings - Disable Comments RECIPE_DISABLE_AMOUNT False Default Recipe Settings - Disable Amount API_PORT 9000 The port exposed by backend API. Do not change this if you're running in Docker API_DOCS True Turns on/off access to the API documentation locally. TZ UTC Must be set to get correct date/time on the server WORKERS_PER_CORE 1 Set the number of workers to the number of CPU cores multiplied by this value (Value * CPUs). More info here MAX_WORKERS Set the maximum number of workers to use. Default is not set meaning unlimited. More info here WEB_CONCURRENCY 2 Override the automatic definition of number of workers. More info here","title":"Env Variables"},{"location":"documentation/getting-started/install/#raspberry-pi-4","text":"Fatal Python error: init_interp_main: can't initialize time Some users experience an problem with running the linux/arm/v7 container on Raspberry Pi 4. This is not a problem with the Mealie container, but with a bug in the hosts Docker installation. Update the host RP4 using instructions , summarized here: wget http://ftp.us.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.5.1-1_armhf.deb sudo dpkg -i libseccomp2_2.5.1-1_armhf.deb","title":"Raspberry Pi 4"},{"location":"documentation/getting-started/install/#advanced","text":"Not Required The items below are completely optional and are not required to manage or install your Mealie instance.","title":"Advanced"},{"location":"documentation/getting-started/install/#custom-caddy-file","text":"The Docker image provided by Mealie contains both the API and the html bundle in one convenient image. This is done by using a proxy server to serve different parts of the application depending on the URL/URI. Requests sent to /api/* or /docs will be directed to the API, anything else will be served the static web files. Below is the default Caddyfile that is used to proxy requests. You can override this file by mounting an alternative Caddyfile to /app/Caddyfile . { auto_https off admin off } :80 { @proxied path /api/* /docs /openapi.json root * /app/dist encode gzip uri strip_suffix / handle_path /api/recipes/image/* { root * /app/data/img/ file_server } handle @proxied { reverse_proxy http://127.0.0.1:9000 } handle { try_files {path}.html {path} / file_server } }","title":"Custom Caddy File"},{"location":"documentation/getting-started/install/#deployed-without-docker","text":"Unsupported Deployment If you are experiencing a problem with manual deployment, please do not submit a github issue unless it is related to an aspect of the application. For deployment help, the discord server is a better place to find support. Alternatively, this project is built on Python and SQLite so you may run it as a python application on your server. This is not a supported options for deployment and is only here as a reference for those who would like to do this on their own. To get started you can clone this repository into a directory of your choice and use the instructions below as a reference for how to get started. There are three parts to the Mealie application Frontend/Static Files Backend API Proxy Server","title":"Deployed without Docker"},{"location":"documentation/getting-started/install/#frontend-static-files","text":"The frontend static files are generated with npm run build . This is done during the build process with docker. If you choose to deploy this as a system application you must do this process yourself. In the project directory run cd frontend to change directories into the frontend directory and run npm install and then npm run build . This will generate the static files in a dist folder in the frontend directory.","title":"Frontend/ Static Files"},{"location":"documentation/getting-started/install/#backend-api","text":"The backend API is build with Python, FastAPI, and SQLite and requires Python 3.9, and Poetry. Once the requirements are installed, in the project directory you can run the command poetry install to create a python virtual environment and install the python dependencies. Once the dependencies are installed you should be ready to run the server. To initialize that database you need to first run python mealie/db/init_db.py . Then to start The web server, you run the command uvicorn mealie.app:app --host 0.0.0.0 --port 9000","title":"Backend API"},{"location":"documentation/getting-started/install/#proxy-server","text":"You must use a proxy server to server up the static files created with npm run build and proxy requests to the API. In the docker build this is done with Caddy. You can use the CaddyFile in the section above as a reference. One important thing to keep in mind is that you should drop any trailing / in the url. Not doing this may result in failed API requests.","title":"Proxy Server"},{"location":"documentation/getting-started/introduction/","text":"About The Project Mealie is a self hosted recipe manager and meal planner with a RestAPI backend and a reactive frontend application built in Vue for a pleasant user experience for the whole family. Easily add recipes into your database by providing the url and Mealie will automatically import the relevant data or add a family recipe with the UI editor. Mealie also provides an API for interactions from 3rd party applications. Remember to join the Discord ! Note In some of the demo gifs the styling may be different than the finale application. demos were done during development prior to finale styling. Warning This is a BETA release and that means things may break and or change down the line. I'll do my best to make sure that any API changes are thoughtful and necessary in order not to break things. Additionally, I'll do my best to provide a migration path if the database schema ever changes. Do not use programs like watchtower to auto update your container. You WILL run into issues if you do this! Key Features \ud83d\udd0d Fuzzy search \ud83c\udff7\ufe0f Tag recipes with categories or tags to flexible sorting \ud83d\udd78 Import recipes from around the web by URL \ud83d\udcf1 Progressive Web App \ud83d\udcc6 Create Meal Plans \ud83d\uded2 Generate shopping lists \ud83d\udc33 Easy setup with Docker \ud83c\udfa8 Customize your interface with color themes layouts \ud83d\udcbe Export all your data in any format with Jinja2 Templates, with easy data restoration from the user interface. \ud83c\udf0d localized in many languages \u2795 Plus tons more! Flexible API Custom key/value pairs for recipes Webhook support Interactive API Documentation thanks to FastAPI and Swagger Raw JSON Recipe Editor Migration from other platforms Chowdown Nextcloud Cookbook Random meal plan generation FAQ Why An API? An API allows integration into applications like Home Assistant that can act as notification engines to provide custom notifications based of Meal Plan data to remind you to defrost the chicken, marinade the steak, or start the CrockPot. Additionally, you can access nearly any backend service via the API giving you total control to extend the application. To explore the API spin up your server and navigate to http://yourserver.com/docs for interactive API documentation. Why a Database? Some users of static-site generator applications like ChowDown have expressed concerns about their data being stuck in a database. Considering this is a new project it is a valid concern to be worried about your data. Mealie specifically addresses this concern by provided automatic daily backups that export your data in json, plain-text markdown files, and/or custom Jinja2 templates. This puts you in controls of how your data is represented when exported from Mealie, which means you can easily migrate to any other service provided Mealie doesn't work for you. As to why we need a database? Developer Experience: Without a database a lot of the work to maintain your data is taken on by the developer instead of a battle tested platform for storing data. Multi User Support: With a solid database as backend storage for your data Mealie can better support multi-user sites and avoid read/write access errors when multiple actions are taken at the same time. Built With Vue.js Vuetify FastAPI Docker Road Map See Roadmap Contributing Contributions are what make the open source community such an amazing place to learn, develop, and create. Any contributions you make are greatly appreciated . See the Contributors Guide for help getting started. If you are not a coder, you can still contribute financially. Financial contributions help me prioritize working on this project over others and help me to know that there is a real demand for project development.","title":"Introduction"},{"location":"documentation/getting-started/introduction/#about-the-project","text":"Mealie is a self hosted recipe manager and meal planner with a RestAPI backend and a reactive frontend application built in Vue for a pleasant user experience for the whole family. Easily add recipes into your database by providing the url and Mealie will automatically import the relevant data or add a family recipe with the UI editor. Mealie also provides an API for interactions from 3rd party applications. Remember to join the Discord ! Note In some of the demo gifs the styling may be different than the finale application. demos were done during development prior to finale styling. Warning This is a BETA release and that means things may break and or change down the line. I'll do my best to make sure that any API changes are thoughtful and necessary in order not to break things. Additionally, I'll do my best to provide a migration path if the database schema ever changes. Do not use programs like watchtower to auto update your container. You WILL run into issues if you do this!","title":"About The Project"},{"location":"documentation/getting-started/introduction/#key-features","text":"\ud83d\udd0d Fuzzy search \ud83c\udff7\ufe0f Tag recipes with categories or tags to flexible sorting \ud83d\udd78 Import recipes from around the web by URL \ud83d\udcf1 Progressive Web App \ud83d\udcc6 Create Meal Plans \ud83d\uded2 Generate shopping lists \ud83d\udc33 Easy setup with Docker \ud83c\udfa8 Customize your interface with color themes layouts \ud83d\udcbe Export all your data in any format with Jinja2 Templates, with easy data restoration from the user interface. \ud83c\udf0d localized in many languages \u2795 Plus tons more! Flexible API Custom key/value pairs for recipes Webhook support Interactive API Documentation thanks to FastAPI and Swagger Raw JSON Recipe Editor Migration from other platforms Chowdown Nextcloud Cookbook Random meal plan generation","title":"Key Features"},{"location":"documentation/getting-started/introduction/#faq","text":"","title":"FAQ"},{"location":"documentation/getting-started/introduction/#why-an-api","text":"An API allows integration into applications like Home Assistant that can act as notification engines to provide custom notifications based of Meal Plan data to remind you to defrost the chicken, marinade the steak, or start the CrockPot. Additionally, you can access nearly any backend service via the API giving you total control to extend the application. To explore the API spin up your server and navigate to http://yourserver.com/docs for interactive API documentation.","title":"Why An API?"},{"location":"documentation/getting-started/introduction/#why-a-database","text":"Some users of static-site generator applications like ChowDown have expressed concerns about their data being stuck in a database. Considering this is a new project it is a valid concern to be worried about your data. Mealie specifically addresses this concern by provided automatic daily backups that export your data in json, plain-text markdown files, and/or custom Jinja2 templates. This puts you in controls of how your data is represented when exported from Mealie, which means you can easily migrate to any other service provided Mealie doesn't work for you. As to why we need a database? Developer Experience: Without a database a lot of the work to maintain your data is taken on by the developer instead of a battle tested platform for storing data. Multi User Support: With a solid database as backend storage for your data Mealie can better support multi-user sites and avoid read/write access errors when multiple actions are taken at the same time.","title":"Why a Database?"},{"location":"documentation/getting-started/introduction/#built-with","text":"Vue.js Vuetify FastAPI Docker","title":"Built With"},{"location":"documentation/getting-started/introduction/#road-map","text":"See Roadmap","title":"Road Map"},{"location":"documentation/getting-started/introduction/#contributing","text":"Contributions are what make the open source community such an amazing place to learn, develop, and create. Any contributions you make are greatly appreciated . See the Contributors Guide for help getting started. If you are not a coder, you can still contribute financially. Financial contributions help me prioritize working on this project over others and help me to know that there is a real demand for project development.","title":"Contributing"},{"location":"documentation/getting-started/updating/","text":"Updating Mealie Read The Release Notes You MUST read the release notes prior to upgrading your container. Currently Mealie provides no database migrations as doing so would slow down development and hinder major changes that may need to happen prior to v1.0.0. Mealie has a robust backup and restore system for managing your data. Before Upgrading Read The Release Notes Identify Breaking Changes Create a Backup and Download from the UI Upgrade Backing Up Your Data See Backups and Restore Section for details on backing up your data Docker For all setups using Docker the updating process looks something like this Stop the container using docker-compose down Pull the latest image using docker-compose pull Start the container again using docker-compose up -d","title":"Updating"},{"location":"documentation/getting-started/updating/#updating-mealie","text":"Read The Release Notes You MUST read the release notes prior to upgrading your container. Currently Mealie provides no database migrations as doing so would slow down development and hinder major changes that may need to happen prior to v1.0.0. Mealie has a robust backup and restore system for managing your data.","title":"Updating Mealie"},{"location":"documentation/getting-started/updating/#before-upgrading","text":"Read The Release Notes Identify Breaking Changes Create a Backup and Download from the UI Upgrade","title":"Before Upgrading"},{"location":"documentation/getting-started/updating/#backing-up-your-data","text":"See Backups and Restore Section for details on backing up your data","title":"Backing Up Your Data"},{"location":"documentation/getting-started/updating/#docker","text":"For all setups using Docker the updating process looks something like this Stop the container using docker-compose down Pull the latest image using docker-compose pull Start the container again using docker-compose up -d","title":"Docker"},{"location":"documentation/recipes/organizing-recipes/","text":"Organizing Recipes Below are some general guidelines that were considered when creating the organization structure for recipes. From The Community My categories are mostly based on the 'course' they belong to. Appetizers, Starters, Main course, but also sauces or beverages. When I'm looking for an idea for an every day dinner, I just browse \"main course\". My tags are for picking the exact type of meal I'm looking for, based on my mood or my guests' diet, like gluten-free, vegetarian, sweet-sour or casserole. They can also act as sub-categories, like \"alcohol\" for beverages or \"hot meal\" for a main course. User: sephrat Structure Tip Below is a suggestion of guidelines my wife and I use for organizing our recipes within Mealie. Mealie is fairly flexible, so feel free to utilize how you'd like! \ud83d\udc4d In the diagram below you will see what we came up with using the new custom pages feature. The large circles indicate pages, and the rectangles indicate categories. We've grouped several 'like' categories with each other as a way to quickly find similar items.","title":"Organizing Recipes"},{"location":"documentation/recipes/organizing-recipes/#organizing-recipes","text":"Below are some general guidelines that were considered when creating the organization structure for recipes.","title":"Organizing Recipes"},{"location":"documentation/recipes/organizing-recipes/#from-the-community","text":"My categories are mostly based on the 'course' they belong to. Appetizers, Starters, Main course, but also sauces or beverages. When I'm looking for an idea for an every day dinner, I just browse \"main course\". My tags are for picking the exact type of meal I'm looking for, based on my mood or my guests' diet, like gluten-free, vegetarian, sweet-sour or casserole. They can also act as sub-categories, like \"alcohol\" for beverages or \"hot meal\" for a main course. User: sephrat","title":"From The Community"},{"location":"documentation/recipes/organizing-recipes/#structure","text":"Tip Below is a suggestion of guidelines my wife and I use for organizing our recipes within Mealie. Mealie is fairly flexible, so feel free to utilize how you'd like! \ud83d\udc4d In the diagram below you will see what we came up with using the new custom pages feature. The large circles indicate pages, and the rectangles indicate categories. We've grouped several 'like' categories with each other as a way to quickly find similar items.","title":"Structure"},{"location":"documentation/recipes/recipes/","text":"Recipes URL Import Adding a recipe can be as easy as clicking in the bottom-right corner, copying the recipe URL into Mealie and letting the web scraper organize information. Currently this scraper is implemented with recipe-scrapers . You may have mixed results on some websites, especially with blogs or non-specific recipe websites. See the bulk import Option below for another a convenient way to add blog style recipes into Mealie. Tip You can find a list of some of the supported sites in the recipe-scrapers repo. If you're site isn't supported, you can work with the recipe-scrapers team to implement it and we can down-stream those changes into Mealie. Using Bookmarklets You can use bookmarklets to generate a bookmark that will take your current location, and open a new tab that will try to import that URL into Mealie. You can use a bookmarklet generator site and the code below to generate a bookmark for your site. Just change the http://localhost:8080 to your sites web address and follow the instructions. Note that there is no trailing / . var url = document . URL ; var mealie = \"http://localhost:8080\" var dest = mealie + \"/?recipe_import_url=\" + url window . open ( dest , '_blank' ) Recipe Editor Recipes can be edited and created via the UI. This is done with both a form based approach where you have a UI to work with as well as with a in browser JSON Editor. The JSON editor allows you to easily copy and paste data from other sources. You can also add a custom recipe with the UI editor built into the web view. Using the + button on the site. Recipe Settings Settings for a specific recipe can be adjusted in the settings menu inside the editor. Currently the settings supports Settings a Recipe to Public/Private Show Nutrition Values Show Assets Landscape Mode (Coming Soon) Note Recipes set to private will only be displayed when a user is logged in. Currently there is no way to generate a share-link for a private recipe, but it is on the roadmap. Recipe Assets While in the editor you also have an opportunity to upload any asset to your recipe. There are several icons that you can choose from or you can choose an arbitrary file icon. Once uploaded you can view or download the asset when viewing the page. Tip You can get a link to an asset to embed in a recipe step by select the copy icon in editor mode. Bulk Import Mealie also supports bulk import of recipe instructions and ingredients. Select \"Bulk Add\" in the editor and paste in your plain text data to be parsed. Each line is treated as one entry and will be appended to the existing ingredients or instructions if they exist. Empty lines will be stripped from the text. Schema Recipes are stored in the json-like format in mongoDB and then sent and edited in json format on the frontend. Each recipes uses Recipe Schema as a general guide with some additional properties specific to Mealie. Example { \"id\" : 263 , \"name\" : \"Homemade Mac and Cheese Bites\" , \"slug\" : \"homemade-mac-and-cheese-bites\" , \"image\" : \"no image\" , \"description\" : \"These are so simple and the perfect finger food ideal for serving kids and as an appetizer! These are DELICIOUS\" , \"recipeCategory\" : [], \"tags\" : [], \"rating\" : null , \"dateAdded\" : \"2021-06-07\" , \"dateUpdated\" : \"2021-06-07T16:23:10.254840\" , \"recipeYield\" : null , \"recipeIngredient\" : [ \"\u00bd pound elbow macaroni\" , \"2 Tablespoons butter\" , \"2 Tablespoons flour\" , \"1\u00bd cups milk\" , \"2 cups shredded sharp cheddar cheese\" , \"2 ounces cream cheese\" , \"\u00bd teaspoon salt\" , \"\u00bc teaspoon pepper\" , \"1 egg beaten\" ], \"recipeInstructions\" : [ { \"title\" : \"Preperation\" , \"text\" : \"Preheat oven to 400 degrees F.\" }, { \"title\" : \"\" , \"text\" : \"Spray mini muffin tins with cooking spray.\" }, { \"title\" : \"\" , \"text\" : \"Cook pasta according to packaged directions and set aside.\" }, { \"title\" : \"Cooking\" , \"text\" : \"In a medium size pan combine butter and flour over medium heat. Whisk until butter is melted and mixture is smooth. Slowly add milk and bring to a simmer. Add 1\u00bd cups of the cheese, cream cheese, salt and pepper. Stir until smooth and creamy. Remove from heat.\" }, { \"title\" : \"\" , \"text\" : \"In a large mixing bowl, carefully stir pasta, cheese sauce, and egg until evenly mixed and pasta is evenly coated.\" }, { \"title\" : \"\" , \"text\" : \"Spoon mac and cheese into mini muffin tins and top each with a small pinch of remaining cheese. Bake at 400 degrees F for 15 minutes or until golden brown.\" }, { \"title\" : \"\" , \"text\" : \"Allow to cool 5 minutes before gently removing the bites.\" } ], \"nutrition\" : { \"calories\" : null , \"fatContent\" : null , \"proteinContent\" : null , \"carbohydrateContent\" : null , \"fiberContent\" : null , \"sodiumContent\" : null , \"sugarContent\" : null }, \"tools\" : [], \"totalTime\" : null , \"prepTime\" : null , \"performTime\" : null , \"settings\" : { \"public\" : true , \"showNutrition\" : true , \"showAssets\" : true , \"landscapeView\" : true }, \"assets\" : [], \"notes\" : [], \"orgURL\" : \"https://www.chef-in-training.com/homemade-mac-and-cheese-bites/\" , \"extras\" : {}, \"comments\" : [] }","title":"Working With Recipes"},{"location":"documentation/recipes/recipes/#recipes","text":"","title":"Recipes"},{"location":"documentation/recipes/recipes/#url-import","text":"Adding a recipe can be as easy as clicking in the bottom-right corner, copying the recipe URL into Mealie and letting the web scraper organize information. Currently this scraper is implemented with recipe-scrapers . You may have mixed results on some websites, especially with blogs or non-specific recipe websites. See the bulk import Option below for another a convenient way to add blog style recipes into Mealie. Tip You can find a list of some of the supported sites in the recipe-scrapers repo. If you're site isn't supported, you can work with the recipe-scrapers team to implement it and we can down-stream those changes into Mealie.","title":"URL Import"},{"location":"documentation/recipes/recipes/#using-bookmarklets","text":"You can use bookmarklets to generate a bookmark that will take your current location, and open a new tab that will try to import that URL into Mealie. You can use a bookmarklet generator site and the code below to generate a bookmark for your site. Just change the http://localhost:8080 to your sites web address and follow the instructions. Note that there is no trailing / . var url = document . URL ; var mealie = \"http://localhost:8080\" var dest = mealie + \"/?recipe_import_url=\" + url window . open ( dest , '_blank' )","title":"Using Bookmarklets"},{"location":"documentation/recipes/recipes/#recipe-editor","text":"Recipes can be edited and created via the UI. This is done with both a form based approach where you have a UI to work with as well as with a in browser JSON Editor. The JSON editor allows you to easily copy and paste data from other sources. You can also add a custom recipe with the UI editor built into the web view. Using the + button on the site.","title":"Recipe Editor"},{"location":"documentation/recipes/recipes/#recipe-settings","text":"Settings for a specific recipe can be adjusted in the settings menu inside the editor. Currently the settings supports Settings a Recipe to Public/Private Show Nutrition Values Show Assets Landscape Mode (Coming Soon) Note Recipes set to private will only be displayed when a user is logged in. Currently there is no way to generate a share-link for a private recipe, but it is on the roadmap.","title":"Recipe Settings"},{"location":"documentation/recipes/recipes/#recipe-assets","text":"While in the editor you also have an opportunity to upload any asset to your recipe. There are several icons that you can choose from or you can choose an arbitrary file icon. Once uploaded you can view or download the asset when viewing the page. Tip You can get a link to an asset to embed in a recipe step by select the copy icon in editor mode.","title":"Recipe Assets"},{"location":"documentation/recipes/recipes/#bulk-import","text":"Mealie also supports bulk import of recipe instructions and ingredients. Select \"Bulk Add\" in the editor and paste in your plain text data to be parsed. Each line is treated as one entry and will be appended to the existing ingredients or instructions if they exist. Empty lines will be stripped from the text.","title":"Bulk Import"},{"location":"documentation/recipes/recipes/#schema","text":"Recipes are stored in the json-like format in mongoDB and then sent and edited in json format on the frontend. Each recipes uses Recipe Schema as a general guide with some additional properties specific to Mealie.","title":"Schema"},{"location":"documentation/recipes/recipes/#example","text":"{ \"id\" : 263 , \"name\" : \"Homemade Mac and Cheese Bites\" , \"slug\" : \"homemade-mac-and-cheese-bites\" , \"image\" : \"no image\" , \"description\" : \"These are so simple and the perfect finger food ideal for serving kids and as an appetizer! These are DELICIOUS\" , \"recipeCategory\" : [], \"tags\" : [], \"rating\" : null , \"dateAdded\" : \"2021-06-07\" , \"dateUpdated\" : \"2021-06-07T16:23:10.254840\" , \"recipeYield\" : null , \"recipeIngredient\" : [ \"\u00bd pound elbow macaroni\" , \"2 Tablespoons butter\" , \"2 Tablespoons flour\" , \"1\u00bd cups milk\" , \"2 cups shredded sharp cheddar cheese\" , \"2 ounces cream cheese\" , \"\u00bd teaspoon salt\" , \"\u00bc teaspoon pepper\" , \"1 egg beaten\" ], \"recipeInstructions\" : [ { \"title\" : \"Preperation\" , \"text\" : \"Preheat oven to 400 degrees F.\" }, { \"title\" : \"\" , \"text\" : \"Spray mini muffin tins with cooking spray.\" }, { \"title\" : \"\" , \"text\" : \"Cook pasta according to packaged directions and set aside.\" }, { \"title\" : \"Cooking\" , \"text\" : \"In a medium size pan combine butter and flour over medium heat. Whisk until butter is melted and mixture is smooth. Slowly add milk and bring to a simmer. Add 1\u00bd cups of the cheese, cream cheese, salt and pepper. Stir until smooth and creamy. Remove from heat.\" }, { \"title\" : \"\" , \"text\" : \"In a large mixing bowl, carefully stir pasta, cheese sauce, and egg until evenly mixed and pasta is evenly coated.\" }, { \"title\" : \"\" , \"text\" : \"Spoon mac and cheese into mini muffin tins and top each with a small pinch of remaining cheese. Bake at 400 degrees F for 15 minutes or until golden brown.\" }, { \"title\" : \"\" , \"text\" : \"Allow to cool 5 minutes before gently removing the bites.\" } ], \"nutrition\" : { \"calories\" : null , \"fatContent\" : null , \"proteinContent\" : null , \"carbohydrateContent\" : null , \"fiberContent\" : null , \"sodiumContent\" : null , \"sugarContent\" : null }, \"tools\" : [], \"totalTime\" : null , \"prepTime\" : null , \"performTime\" : null , \"settings\" : { \"public\" : true , \"showNutrition\" : true , \"showAssets\" : true , \"landscapeView\" : true }, \"assets\" : [], \"notes\" : [], \"orgURL\" : \"https://www.chef-in-training.com/homemade-mac-and-cheese-bites/\" , \"extras\" : {}, \"comments\" : [] }","title":"Example"},{"location":"documentation/toolbox/notifications/","text":"External Notifications Apprise Using the Apprise library Mealie is able to provide notification services for nearly every popular service. Some of our favorites are... Gotify Discord Home Assistant Matrix Pushover But there are many more to choose from! Take a look at their wiki for information on how to create their URL formats that you can use to create a notification integration in Mealie. Subscribe Events There are several categories of events that mealie logs that can be broadcast with the notifications feature. You can also see a feed of your events in the Admin Dashboard General Events Application Startup Recipe Events Create Recipe Delete Recipe Database Events Export/Import Database Initialization Scheduled Events MealPlan Webhooks Sent Group Events Create/Delete Groups User Events User Creation User Sign-up Sign-up Token Creation Invalid login attempts In most cases the events will also provide details on which user performed the action. Now you'll know when your grandma deletes your favorite recipe! Info This is a new feature and we are still working through all the possibilities of events. if you have an idea for an event let us know! Creating a New Notification New events can be created and viewed in admin Toolbox /admin/toolbox?tab=event-notifications . Select the \"+ Notification\" button and you'll be provided with a dialog. Complete the form using the URL for the service you'd like to connect to. Before saving be sure to use the test feature. Tip The feedback provided from the test feature indicates only if the URL you provided is valid, not if the message was successfully sent. Be sure to check the notification feed for the test message. Examples Discord Gotify","title":"External Notifications"},{"location":"documentation/toolbox/notifications/#external-notifications","text":"","title":"External Notifications"},{"location":"documentation/toolbox/notifications/#apprise","text":"Using the Apprise library Mealie is able to provide notification services for nearly every popular service. Some of our favorites are... Gotify Discord Home Assistant Matrix Pushover But there are many more to choose from! Take a look at their wiki for information on how to create their URL formats that you can use to create a notification integration in Mealie.","title":"Apprise"},{"location":"documentation/toolbox/notifications/#subscribe-events","text":"There are several categories of events that mealie logs that can be broadcast with the notifications feature. You can also see a feed of your events in the Admin Dashboard General Events Application Startup Recipe Events Create Recipe Delete Recipe Database Events Export/Import Database Initialization Scheduled Events MealPlan Webhooks Sent Group Events Create/Delete Groups User Events User Creation User Sign-up Sign-up Token Creation Invalid login attempts In most cases the events will also provide details on which user performed the action. Now you'll know when your grandma deletes your favorite recipe! Info This is a new feature and we are still working through all the possibilities of events. if you have an idea for an event let us know!","title":"Subscribe Events"},{"location":"documentation/toolbox/notifications/#creating-a-new-notification","text":"New events can be created and viewed in admin Toolbox /admin/toolbox?tab=event-notifications . Select the \"+ Notification\" button and you'll be provided with a dialog. Complete the form using the URL for the service you'd like to connect to. Before saving be sure to use the test feature. Tip The feedback provided from the test feature indicates only if the URL you provided is valid, not if the message was successfully sent. Be sure to check the notification feed for the test message.","title":"Creating a New Notification"},{"location":"documentation/toolbox/notifications/#examples","text":"","title":"Examples"},{"location":"documentation/toolbox/notifications/#discord","text":"","title":"Discord"},{"location":"documentation/toolbox/notifications/#gotify","text":"","title":"Gotify"},{"location":"documentation/toolbox/organize-tools/","text":"Toolbox The toolbox gives you multiple options to clean-up and organize your recipes. You can get notified through different channels. You can access it through the 'Settings' menu or through the dashboard . Category and Tag Editor The 'Categories' and 'Tags' tab give you the option to bulk assign categories and tags to multiple recipes. You could also remove the unused ones or title case them all. Bulk Organize The 'Organize' tab can be used to show all of the items that do not have any category or tag assigned.","title":"Organization Tools"},{"location":"documentation/toolbox/organize-tools/#toolbox","text":"The toolbox gives you multiple options to clean-up and organize your recipes. You can get notified through different channels. You can access it through the 'Settings' menu or through the dashboard .","title":"Toolbox"},{"location":"documentation/toolbox/organize-tools/#category-and-tag-editor","text":"The 'Categories' and 'Tags' tab give you the option to bulk assign categories and tags to multiple recipes. You could also remove the unused ones or title case them all.","title":"Category and Tag Editor"},{"location":"documentation/toolbox/organize-tools/#bulk-organize","text":"The 'Organize' tab can be used to show all of the items that do not have any category or tag assigned.","title":"Bulk Organize"},{"location":"documentation/users-groups/meal-planner/","text":"Meal Planner Working with Planner In Mealie you can create a meal plan based off the calendar inputs on the meal planner page. There is no limit to how long or how short a meal plan is. You may also create duplicate meal plans for the same date range. After selecting your date range, click on the card for each day and search through recipes to find your choice. Add a side-dish if you prefer to. After selecting a recipe for all meals, save the plan. Selecting the 'No Recipe' button will allow you to add an entry without a recipe by providing a title and description. You can also randomly generate meal plans with the dice-button at the bottom. To edit the meal in a meal plan simply select the edit button on the card in the timeline. Similarly, to delete a meal plan click the delete button on the card in the timeline. Currently, there is no support to change the date range in a meal plan. Shopping Lists For any meal plan created you can view a breakdown of all the ingredients and use an experimental sort function to sort similarly ingredients. This is a very new feature and results of the auto sort may vary.","title":"Planning Meals"},{"location":"documentation/users-groups/meal-planner/#meal-planner","text":"","title":"Meal Planner"},{"location":"documentation/users-groups/meal-planner/#working-with-planner","text":"In Mealie you can create a meal plan based off the calendar inputs on the meal planner page. There is no limit to how long or how short a meal plan is. You may also create duplicate meal plans for the same date range. After selecting your date range, click on the card for each day and search through recipes to find your choice. Add a side-dish if you prefer to. After selecting a recipe for all meals, save the plan. Selecting the 'No Recipe' button will allow you to add an entry without a recipe by providing a title and description. You can also randomly generate meal plans with the dice-button at the bottom. To edit the meal in a meal plan simply select the edit button on the card in the timeline. Similarly, to delete a meal plan click the delete button on the card in the timeline. Currently, there is no support to change the date range in a meal plan.","title":"Working with Planner"},{"location":"documentation/users-groups/meal-planner/#shopping-lists","text":"For any meal plan created you can view a breakdown of all the ingredients and use an experimental sort function to sort similarly ingredients. This is a very new feature and results of the auto sort may vary.","title":"Shopping Lists"},{"location":"documentation/users-groups/user-settings/","text":"User Settings Profile Settings In the users profile they are able to: Change Display Name Change Email Update Password View Their Group Update Profile Picture (Experimental) Create API Keys Themes Color themes can be created and set from the UI in the Settings-Profile page. You can select an existing color theme or create a new one. On creation of a new color theme, the default colors will be used, then you can select and save as you'd like. By default, the \"default\" theme will be loaded for all new users visiting the site. All created color themes are available to all users of the site. Theme Colors will be set for both light and dark modes. Tip Theme data is stored in local storage in the browser. Calling \"Save colors and apply theme will refresh the local storage with the selected theme as well save the theme to the database. Group & Meal Plan In the meal planner section a user can select categories to be used as a part of the random recipe selector in the meal plan creator. If no categories are selected, all recipes will be used Meal planner webhooks are post requests sent from Mealie to an external endpoint. The body of the message is the Recipe JSON of the scheduled meal. If no meal is schedule, no request is sent. The webhook functionality can be enabled or disabled as well as scheduled. Note that you must \"Save\" prior to any changes taking affect server side. API Key Generation Users can quickly and easily generate API keys with the user interface. Provide a name for your token and then you are shown 1 time the generated API key. If you ever loose the API key you are not able to identify or retrieve it from the UI. Warning API keys are stored in plain text in the database.","title":"User Settings"},{"location":"documentation/users-groups/user-settings/#user-settings","text":"","title":"User Settings"},{"location":"documentation/users-groups/user-settings/#profile-settings","text":"In the users profile they are able to: Change Display Name Change Email Update Password View Their Group Update Profile Picture (Experimental) Create API Keys","title":"Profile Settings"},{"location":"documentation/users-groups/user-settings/#themes","text":"Color themes can be created and set from the UI in the Settings-Profile page. You can select an existing color theme or create a new one. On creation of a new color theme, the default colors will be used, then you can select and save as you'd like. By default, the \"default\" theme will be loaded for all new users visiting the site. All created color themes are available to all users of the site. Theme Colors will be set for both light and dark modes. Tip Theme data is stored in local storage in the browser. Calling \"Save colors and apply theme will refresh the local storage with the selected theme as well save the theme to the database.","title":"Themes"},{"location":"documentation/users-groups/user-settings/#group-meal-plan","text":"In the meal planner section a user can select categories to be used as a part of the random recipe selector in the meal plan creator. If no categories are selected, all recipes will be used Meal planner webhooks are post requests sent from Mealie to an external endpoint. The body of the message is the Recipe JSON of the scheduled meal. If no meal is schedule, no request is sent. The webhook functionality can be enabled or disabled as well as scheduled. Note that you must \"Save\" prior to any changes taking affect server side.","title":"Group &amp; Meal Plan"},{"location":"documentation/users-groups/user-settings/#api-key-generation","text":"Users can quickly and easily generate API keys with the user interface. Provide a name for your token and then you are shown 1 time the generated API key. If you ever loose the API key you are not able to identify or retrieve it from the UI. Warning API keys are stored in plain text in the database.","title":"API Key Generation"}]}